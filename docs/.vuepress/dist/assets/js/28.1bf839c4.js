(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{302:function(t,s,a){"use strict";a.r(s);var e=a(14),n=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[s("img",{attrs:{src:"images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/image-20230201111800003.png",alt:"image-20230201111800003"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/image-20230201111819317.png",alt:"image-20230201111819317"}})]),t._v(" "),s("h1",{attrs:{id:"网络层-ip"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#网络层-ip"}},[t._v("#")]),t._v(" 网络层-IP")]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("MTU")]),t._v("：IP层一个网络包的最大长度，以太网中一般为 "),s("strong",[t._v("1500")]),t._v(" 字节；")]),t._v(" "),s("p",[t._v("然而 Internet 上的路由器可能会将 MTU 设为不同的值，则整个网络需要使用一系列机制调整每个路由器的MTU以保证数据报顺利到达目的地。IPV4标准建议MTU为 "),s("strong",[t._v("576")]),t._v(" 字节。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("MSS")]),t._v("：除去 IP 和 TCP 头部之后，一个网络包所能容纳的 "),s("strong",[t._v("TCP 数据载荷")]),t._v(" 部分 的最大长度：1500-20-20="),s("strong",[t._v("1460字节")]),t._v("（ip头定长，tcp头最少20）；")])])]),t._v(" "),s("h2",{attrs:{id:"ip数据报格式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ip数据报格式"}},[t._v("#")]),t._v(" IP数据报格式")]),t._v(" "),s("img",{staticStyle:{zoom:"67%"},attrs:{src:"images/计算机网络/85c05fb1-5546-4c50-9221-21f231cdc8c5.jpg",alt:"img"}}),t._v(" "),s("p",[t._v("固定长度："),s("strong",[t._v("20字节")]),t._v("。")]),t._v(" "),s("p",[t._v("可变长度：0~40字节（可选+填充），但要"),s("strong",[t._v("4字节对齐")]),t._v("。（如上图这样画每行4字节，就是为了对齐")]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("版本")]),t._v(" : 有 4（IPv4）和 6（IPv6）两个值；")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("首部长度")]),t._v(" : 单位是4字节，取值5~15（4bit，最大能表示15，但头部最少20字节）")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("区分服务")]),t._v(" : 用来获得更好的服务，一般情况下不使用。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("总长度")]),t._v(" : 【首部 + 数据】的长度，单位字节。16bit最大65535")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("生存时间")]),t._v(" ：TTL，它的存在是为了防止无法交付的数据报在互联网中不断兜圈子。以路由器"),s("strong",[t._v("跳数")]),t._v("为单位，当 TTL 为 0 时就丢弃数据报。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("协议")]),t._v(" ：指出携带的数据应该上交给哪个协议进行处理。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("协议名称")]),t._v(" "),s("th",[t._v("ICMP")]),t._v(" "),s("th",[t._v("IGMP")]),t._v(" "),s("th",[t._v("TCP")]),t._v(" "),s("th",[t._v("UDP")]),t._v(" "),s("th",[t._v("IPV6")]),t._v(" "),s("th",[t._v("OSPF")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("字段值")]),t._v(" "),s("td",[t._v("1")]),t._v(" "),s("td",[t._v("2")]),t._v(" "),s("td",[t._v("6")]),t._v(" "),s("td",[t._v("17")]),t._v(" "),s("td",[t._v("41")]),t._v(" "),s("td",[t._v("89")])])])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("首部检验和")]),t._v(" ：检验和不包含数据部分，可以减少计算的工作量。")]),t._v(" "),s("p",[t._v("数据报每经过一个"),s("strong",[t._v("路由器")]),t._v("，都要重新计算检验和，因为首部中的某些字段的值（例如生存时间TTL、标志以及片偏移等）都可能发生变化")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("标识")]),t._v(" : 在数据报长度过长从而发生分片的情况下，相同数据报的不同分片具有相同的标识符。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("片偏移")]),t._v(" : 和标识符一起，用于发生分片的情况。片偏移的单位为 8 字节。")])]),t._v(" "),s("li")]),t._v(" "),s("h1",{attrs:{id:"传输层-tcp"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#传输层-tcp"}},[t._v("#")]),t._v(" 传输层-TCP")]),t._v(" "),s("h2",{attrs:{id:"tcp-首部格式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tcp-首部格式"}},[t._v("#")]),t._v(" TCP 首部格式")]),t._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:"images/计算机网络/55dc4e84-573d-4c13-a765-52ed1dd251f9.png",alt:"img"}}),t._v(" "),s("p",[t._v("固定长度："),s("strong",[t._v("20字节")]),t._v("。")]),t._v(" "),s("p",[t._v("可变长度：0~40字节（选项+填充），但要"),s("strong",[t._v("4字节对齐")]),t._v("。（如上图这样画每行4字节，就是为了对齐")]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("源端口")]),t._v("：16bit，表示0~65535号端口")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("目的端口")]),t._v("：16bit，表示0~65535号端口")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("序号 seq")]),t._v(" ：用于对"),s("strong",[t._v("数据部分")]),t._v("字节流进行编号，例如序号为 301，表示第一个字节的编号为 301，如果携带的数据长度为 100 字节，那么下一个报文段的序号应为 401。")]),t._v(" "),s("p",[t._v("因为占32位，所以取值范围0~2^31-1。当序号到达最后一个时，下一个序号又回到0")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("确认号 ack")]),t._v(" ：期望收到的下一个报文段的序号。例如 B 正确收到 A 发送来的一个报文段，序号为 501，携带的数据长度为 200 字节，因此 B 期望下一个报文段的序号为 701，B 发送给 A 的确认报文段中确认号就为 701。")]),t._v(" "),s("p",[t._v("取值范围也是0~2^31-1，到达最后一个回头")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("数据偏移")]),t._v(" ：数据部分距离报文段起始处的偏移量，实际上指的是"),s("strong",[t._v("首部的长度")]),t._v("（单位是4字节），取值5~15（4bit，最大能表示15，但头部最少20字节）")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("确认 ACK")]),t._v(" ：当 ACK=1 时确认号字段ack有效，否则无效。TCP 规定，在连接建立后所有传送的报文段都必须把 ACK 置 1（除了FIN）。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("同步 SYN")]),t._v(" ：在"),s("strong",[t._v("连接建立时")]),t._v("用来同步序号。当 SYN=1，ACK=0 时表示这是一个连接请求报文段。若对方同意建立连接，则响应报文中 SYN=1，ACK=1。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("终止 FIN")]),t._v(" ：用来"),s("strong",[t._v("释放一个连接")]),t._v("，当 FIN=1 时，表示此报文段的发送方的数据已发送完毕，并要求释放连接。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("窗口")]),t._v(" ：窗口值作为接收方让发送方设置其发送窗口的依据。之所以要有这个限制，是因为接收方的数据缓存空间是有限的。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("校验和")]),t._v("：接收时用于判断是否误码，发送时计算填入。在下图介绍计算方法")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("选项")]),t._v("：长度可变，0~40字节。")]),t._v(" "),s("ul",[s("li",[t._v("最大报文段长度（MSS，指TCP"),s("strong",[t._v("数据载荷")]),t._v("部分长度）选项：一般认为应尽可能大，但不能超过IP分片的长度限制。TCP建立时双方将自己支持的MSS写入该字段，数据传输阶段取较小的那个MSS值。默认536，即TCP报文总长度最小为536+20=556")])])])]),t._v(" "),s("h2",{attrs:{id:"伪首部"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#伪首部"}},[t._v("#")]),t._v(" 伪首部")]),t._v(" "),s("p",[s("img",{attrs:{src:"images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/image-20230201001326478.png",alt:"image-20230201001326478"}})]),t._v(" "),s("p",[s("strong",[t._v("发送时")])]),t._v(" "),s("p",[t._v("会添加伪首部，用于计算校验和")]),t._v(" "),s("ol",[s("li",[t._v("将TCP首部中检验和字段的值置为0。")]),t._v(" "),s("li",[t._v("将伪首部、TCP首部以及数据载荷这三部分划分成若干个"),s("strong",[t._v("2字节")]),t._v("的字。若伪首部、TCP首部以及数据载荷这三部分的总长度不是偶数个字节，则在最后添加1个“全0”字节。")]),t._v(" "),s("li",[t._v("对划分出的全部2字节的字进行反码算数运算求和，并将求和结果取反码。")]),t._v(" "),s("li",[t._v("将步骤③得到的结果写入TCP首部中的检验和字段。")])]),t._v(" "),s("p",[s("strong",[t._v("接收时")])]),t._v(" "),s("ol",[s("li",[t._v("给接收到的TCP报文段前面添加一个12字节的伪首部。")]),t._v(" "),s("li",[t._v("将伪首部、TCP首部以及数据载荷这三部分划分成若干个2字节的字。")]),t._v(" "),s("li",[t._v("对划分出的全部2字节的字进行反码算数运算求和，并将求和结果取反码。")]),t._v(" "),s("li",[t._v("若步骤③得到的"),s("strong",[t._v("结果为0")]),t._v("，则表示TCP报文段在传输过程中没有误码。否则，表示出现了误码。")])]),t._v(" "),s("h2",{attrs:{id:"三次握手-三报文握手"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三次握手-三报文握手"}},[t._v("#")]),t._v(" 三次握手（三报文握手）")]),t._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:"images/计算机网络/e92d0ebc-7d46-413b-aec1-34a39602f787.png",alt:"img"}}),t._v(" "),s("p",[t._v("假设 A 为客户端，B 为服务器端。三次握手的报文"),s("strong",[t._v("都不携带数据")]),t._v("。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("首先 B 处于 LISTEN（监听）状态，等待客户的连接请求。")])]),t._v(" "),s("li",[s("p",[t._v("A 向 B 发送连接请求报文，SYN=1，"),s("strong",[t._v("ACK=0")]),t._v("（因为是"),s("strong",[t._v("初始报文")]),t._v("，不需要对任何报文确认），选择一个初始的序号 x。")])]),t._v(" "),s("li",[s("p",[t._v("B 收到连接请求报文，如果同意建立连接，则向 A 发送连接确认报文，SYN=1，ACK=1，确认号为 x+1（因为A发来的报文不携带数据，所以期望收到下一个报文序号是x+1），同时也选择一个初始的序号 y。")])]),t._v(" "),s("li",[s("p",[t._v("A 收到 B 的连接确认报文后，还要向 B 发出确认，ACK=1，确认号为 y+1，序号为 x+1。")]),t._v(" "),s("p",[t._v("注意这是一个"),s("strong",[t._v("普通报文")]),t._v("，可以携带数据。如果未携带数据则不消耗序号seq，即A发出的下一个报文seq仍为x+1。而前两个报文虽然不带数据，但都消耗一个序号。")])]),t._v(" "),s("li",[s("p",[t._v("B 收到 A 的确认后，连接建立，双方都可以进行收发。")])]),t._v(" "),s("li",[s("p",[t._v("数据传送时，"),s("strong",[t._v("ack=发送方的seq+发送方的len")]),t._v("。（具体见wireshark抓包一节）")]),t._v(" "),s("p",[t._v("注意：带SYN、FIN的报文不同，ack=发送方的seq+发送方的len**+1**。")])])]),t._v(" "),s("h2",{attrs:{id:"四次挥手-四报文挥手"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#四次挥手-四报文挥手"}},[t._v("#")]),t._v(" 四次挥手（四报文挥手）")]),t._v(" "),s("img",{staticStyle:{zoom:"67%"},attrs:{src:"images/计算机网络/f87afe72-c2df-4c12-ac03-9b8d581a8af8.jpg",alt:"img"}}),t._v(" "),s("p",[t._v("以下描述不讨论序号和确认号，因为序号和确认号的规则比较简单（前两个报文：u为A上一个报文的序号+1，v为B的上一个报文序号+1。第三个报文：w为"),s("strong",[t._v("半关闭状态")]),t._v("下B发送的上一个报文序号+1，u+1是对之前A发送释放连接报文的"),s("strong",[t._v("重复确认")]),t._v("）。")]),t._v(" "),s("p",[t._v("并且不讨论 ACK（因为 ACK 在连接建立之后都为 1）。")]),t._v(" "),s("ul",[s("li",[t._v("A 发送连接释放报文，FIN=1。")]),t._v(" "),s("li",[t._v("B 收到之后发出确认，此时 TCP 属于"),s("strong",[t._v("半关闭状态")]),t._v("，B 能向 A 发送数据但是 A 不能向 B 发送数据。")]),t._v(" "),s("li",[t._v("当 B 不再需要连接时，发送连接释放报文，FIN=1。")]),t._v(" "),s("li",[t._v("A 收到后发出确认，进入 TIME-WAIT 状态，"),s("strong",[t._v("等待 2 MSL")]),t._v("（最大报文存活时间）后释放连接。")]),t._v(" "),s("li",[t._v("B 收到 A 的确认后"),s("strong",[t._v("立刻")]),t._v("释放连接。")])]),t._v(" "),s("h2",{attrs:{id:"q-为什么三次握手不能简化为两次"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#q-为什么三次握手不能简化为两次"}},[t._v("#")]),t._v(" Q：为什么三次握手不能简化为两次？")]),t._v(" "),s("p",[t._v("一句话：防止重复建立连接。")]),t._v(" "),s("p",[t._v("考虑情况：客户端发送的连接请求c1如果在网络中滞留，隔很长一段时间才能收到服务器端发回的连接确认。客户端等待一个超时重传时间之后，就会重新请求连接c2。")]),t._v(" "),s("p",[t._v("但是这个滞留的连接请求c1最后还是会到达服务器，如果不进行三次握手，那么服务器就会打开两个连接。如果有第三次握手，客户端会忽略服务器对连接c2请求的确认，因此就不会再次打开连接。")]),t._v(" "),s("p",[s("strong",[t._v("通俗理解（全网独家！！！）")])]),t._v(" "),s("p",[t._v("客户端是主动方，只用两次握手就能建立"),s("strong",[t._v("单向")]),t._v("连接了。但服务器是被动方，也需要一去一回两次握手建立"),s("strong",[t._v("单向")]),t._v("连接，本质上总共需要四次握手才能建立双向连接。但服务器发送响应给客户端，和服务器发送建立连接的请求，这两次可以优化为一次，因此三次就足够。")]),t._v(" "),s("h2",{attrs:{id:"q-为什么要四次挥手"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#q-为什么要四次挥手"}},[t._v("#")]),t._v(" Q：为什么要四次挥手？")]),t._v(" "),s("p",[t._v("类似于《Q：为什么三次握手不能简化为两次？》的通俗理解，结束双向连接也需要双方分别结束单向连接，共四次。")]),t._v(" "),s("p",[t._v("第一次挥手后，服务器就进入 CLOSE-WAIT 状态，是为了让服务器端发送还未传送完毕的数据。")]),t._v(" "),s("p",[s("strong",[t._v("为何不像三次握手那样将服务器的两次握手合并成一次？")])]),t._v(" "),s("p",[t._v("因为此时连接已建立，应该让服务器充分利用连接。")]),t._v(" "),s("p",[s("strong",[t._v("TIME_WAIT")])]),t._v(" "),s("p",[t._v("客户端接收到服务器端的 FIN 报文后进入此状态，此时并不是直接进入 CLOSED 状态，还需要等待一个时间计时器设置的时间 2MSL。两个理由：")]),t._v(" "),s("ul",[s("li",[t._v("确保A最后一个确认报文能够到达B。如果 B 没收到 A 发送来的确认报文，那么就会重新发送连接释放请求报文（超时重传），导致A一直无法关闭。")]),t._v(" "),s("li",[t._v("为了让本连接持续时间内所产生的所有报文都从网络中消失，使得下一个新的连接不会出现旧的连接请求报文。")])]),t._v(" "),s("h2",{attrs:{id:"q-2msl如何得出"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#q-2msl如何得出"}},[t._v("#")]),t._v(" Q：2MSL如何得出？")]),t._v(" "),s("p",[s("strong",[t._v("类似问题：如何保证A发出最后一个连接释放报文，B一定能关闭？")])]),t._v(" "),s("p",[t._v("考虑最坏情况：A发出最后一个连接释放报文，最多1MSL到达B，如果该报文丢失，则B发起超时重传（B发出FIN也会等2MSL），最多1MSL到达A，总共经历2MSL。如果2MSL后没收到B的报文，则说明B没有超时重传，确认B已经关闭，因此A可以放心关闭。")]),t._v(" "),s("h2",{attrs:{id:"q-既然-ip-层会分片-为什么-tcp-层还需要-mss-呢"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#q-既然-ip-层会分片-为什么-tcp-层还需要-mss-呢"}},[t._v("#")]),t._v(" Q：既然 IP 层会分片，为什么 TCP 层还需要 MSS 呢？")]),t._v(" "),s("p",[t._v("考虑情况：如果tcp整个报文交给IP层分片，当IP层有一个超过MTU大小的数据要发送，则要进行分片，把这个数据拆分成若干个小于MTU的分片。")]),t._v(" "),s("p",[t._v("而IP层没有tcp的超时重传机制，只要其中一个IP分片丢失，则所有分片都要重传。则一个tcp报文的超时重传会导致下层多个IP分片的重传。")]),t._v(" "),s("p",[t._v("因此tcp报文的长度不应超过IP报文的最大长度")]),t._v(" "),s("h2",{attrs:{id:"q-tcp的字节序是大端小端"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#q-tcp的字节序是大端小端"}},[t._v("#")]),t._v(" Q：TCP的字节序是大端小端？")]),t._v(" "),s("p",[t._v("TCP/IP协议规定使用 "),s("strong",[t._v("“大端”")]),t._v(" 字节序作为网络字节序。")]),t._v(" "),s("blockquote",[s("p",[t._v("Big-Endian（大端字节序）：高位字节排放在内存的低地址端，低位字节排放在内存的高地址端（这是人类读写数值的方法）；")]),t._v(" "),s("p",[t._v("Little-Endian（小端字节序）：低位字节排放在内存的低地址端，高位字节排放在内存的高地址端。")]),t._v(" "),s("p",[t._v("例如 0x1234567 的大端和小端存储如下，地址从左到右：")]),t._v(" "),s("p",[s("img",{attrs:{src:"images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/1200.jpeg",alt:"img"}})])]),t._v(" "),s("p",[t._v("如果接收到的第一个字节作为高位字节（如上图“01”），这就要求发送时也是先发高位字节。")]),t._v(" "),s("p",[t._v("因此收发双方需要约定使用同样的字节序，才能正常传输。TCP就约定都用大端。")]),t._v(" "),s("h2",{attrs:{id:"q-什么是syn攻击-如何解决"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#q-什么是syn攻击-如何解决"}},[t._v("#")]),t._v(" Q：什么是SYN攻击？如何解决？")]),t._v(" "),s("p",[t._v("TCP 连接建立是需要三次握手，假设攻击者短时间伪造不同 IP 地址的 "),s("code",[t._v("SYN")]),t._v(" 报文，服务端每接收到一个 "),s("code",[t._v("SYN")]),t._v(" 报文，就进入"),s("code",[t._v("SYN_RCVD")]),t._v(" 状态，但服务端发送出去的 "),s("code",[t._v("ACK + SYN")]),t._v(" 报文，无法得到未知 IP 主机的 "),s("code",[t._v("ACK")]),t._v(" 应答，久而久之就会"),s("strong",[t._v("占满服务端的 SYN 接收队列（未连接队列）")]),t._v("，使得服务器不能为正常用户服务。")]),t._v(" "),s("p",[s("strong",[t._v("解决")])]),t._v(" "),s("p",[t._v("修改 Linux 内核参数，控制队列大小和当队列满时应做什么处理。")]),t._v(" "),s("ul",[s("li",[t._v("当网卡接收数据包的速度大于内核处理的速度时，会有一个队列保存这些数据包。控制该队列的最大值如下参数：")])]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("net.core.netdev_max_backlog\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("ul",[s("li",[t._v("SYN_RCVD 状态连接的最大个数：")])]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("net.ipv4.tcp_max_syn_backlog\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("ul",[s("li",[t._v("超出处理能力时，对新的 SYN 直接回报 RST，丢弃连接：")])]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("net.ipv4.tcp_abort_on_overflow\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h2",{attrs:{id:"tcp可靠传输"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tcp可靠传输"}},[t._v("#")]),t._v(" TCP可靠传输")]),t._v(" "),s("p",[t._v("TCP 使用超时重传来实现可靠传输：如果一个已经发送的报文段在超时时间内没有收到确认，那么就重传这个报文段。")]),t._v(" "),s("p",[t._v("一个报文段从发送再到接收到确认所经过的时间称为往返时间 RTT，加权平均往返时间 RTTs 计算如下：\n$$\nRTTs = (1-a)"),s("em",[t._v("RTTs+a")]),t._v("RTT\n$$\n其中，0 ≤ a ＜ 1，RTTs 随着 a 的增加更容易受到 RTT 的影响。")]),t._v(" "),s("p",[t._v("超时时间 RTO 应该略大于 RTTs，TCP 使用的超时时间计算如下：\n$$\nRTO=RTTs+4*RTTd\n$$\n其中 RTTd 为偏差的加权平均值。")]),t._v(" "),s("p",[t._v("**【2011年 题40】**主机甲与主机乙之间已建立一个TCP连接，主机甲向主机乙发送了3个连续的TCP段，分 别包含300字节、400字节和500字节的有效载荷，第3个段的序号为900。若主机乙仅正 确接收到第1和第3个段，则主机乙发送给主机甲的确认序号是 ()")]),t._v(" "),s("p",[t._v("A．300     B．500     C．1200      D．1400")]),t._v(" "),s("p",[t._v("答案：B")]),t._v(" "),s("p",[t._v("TCP保证按序接收，报文1和3都接收到，缺了2，因此会要求重传2。第3个报文序号900，则根据第2个报文长度400，900-400=500，即是第2个报文的序号。期望获得该报文，则ACK=500")]),t._v(" "),s("h2",{attrs:{id:"tcp滑动窗口"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tcp滑动窗口"}},[t._v("#")]),t._v(" TCP滑动窗口")]),t._v(" "),s("p",[t._v("窗口是缓存的一部分，用来暂时存放字节流。发送方和接收方各有一个窗口，接收方通过 TCP 报文段中的窗口字段告诉发送方自己的窗口大小，发送方根据这个值和其它信息设置自己的窗口大小。")]),t._v(" "),s("p",[t._v("发送窗口内的字节都允许被发送，接收窗口内的字节都允许被接收。如果发送窗口左部的字节已经发送并且收到了确认，那么就将发送窗口向右滑动一定距离，直到左部第一个字节不是已发送并且已确认的状态；接收窗口的滑动类似，接收窗口左部字节已经发送确认并交付主机，就向右滑动接收窗口。")]),t._v(" "),s("p",[t._v("接收窗口只会对窗口内最后一个按序到达的字节进行确认，例如接收窗口已经收到的字节为 {31, 34, 35}，其中 {31} 按序到达，而 {34, 35} 就不是，因此只对字节 31 进行确认。发送方得到一个字节的确认之后，就知道这个字节之前的所有字节都已经被接收。")]),t._v(" "),s("p",[s("img",{attrs:{src:"images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/a3253deb-8d21-40a1-aae4-7d178e4aa319.jpg",alt:"img"}})]),t._v(" "),s("h2",{attrs:{id:"tcp-流量控制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tcp-流量控制"}},[t._v("#")]),t._v(" TCP 流量控制")]),t._v(" "),s("p",[t._v("流量控制是为了控制发送方发送速率，保证接收方来得及接收。")]),t._v(" "),s("p",[t._v("接收方发送的确认报文中的窗口字段可以用来控制发送方窗口大小，从而影响发送方的发送速率。将窗口字段设置为 0，则发送方不能发送数据。")]),t._v(" "),s("h2",{attrs:{id:"tcp-拥塞控制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tcp-拥塞控制"}},[t._v("#")]),t._v(" TCP 拥塞控制")]),t._v(" "),s("p",[t._v("如果网络出现拥塞，分组将会丢失，此时发送方会继续重传，从而导致网络拥塞程度更高。因此当出现拥塞时，应当控制发送方的速率。这一点和流量控制很像，但是出发点不同。流量控制是为了让接收方能来得及接收，而拥塞控制是为了降低整个网络的拥塞程度。")]),t._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:"images/计算机网络/51e2ed95-65b8-4ae9-8af3-65602d452a25.jpg",alt:"img"}}),t._v(" "),s("p",[t._v("TCP 主要通过四个算法来进行拥塞控制：慢开始、拥塞避免、快重传、快恢复。")]),t._v(" "),s("p",[t._v("发送方需要维护一个叫做"),s("strong",[t._v("拥塞窗口")]),t._v("（cwnd）的状态变量，注意拥塞窗口与发送方窗口的区别：拥塞窗口只是一个状态变量，实际决定发送方能发送多少数据的是发送方窗口。")]),t._v(" "),s("p",[t._v("为了便于讨论，做如下假设：")]),t._v(" "),s("ul",[s("li",[t._v("接收方有足够大的接收缓存，因此不会发生流量控制；")]),t._v(" "),s("li",[t._v("虽然 TCP 的窗口基于字节，但是这里设窗口的大小单位为报文段。")])]),t._v(" "),s("p",[s("img",{attrs:{src:"images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/910f613f-514f-4534-87dd-9b4699d59d31.png",alt:"img"}})]),t._v(" "),s("h3",{attrs:{id:"_1-慢开始与拥塞避免"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-慢开始与拥塞避免"}},[t._v("#")]),t._v(" 1. 慢开始与拥塞避免")]),t._v(" "),s("p",[t._v("发送的最初执行慢开始，令 cwnd = 1，发送方只能发送 1 个报文段；当收到确认后，将 cwnd 加倍，因此之后发送方能够发送的报文段数量为：2、4、8 ...")]),t._v(" "),s("p",[t._v("注意到慢开始每个轮次都将 cwnd 加倍，这样会让 cwnd 增长速度非常快，从而使得发送方发送的速度增长速度过快，网络拥塞的可能性也就更高。设置一个慢开始门限 ssthresh，当 cwnd >= ssthresh 时，进入拥塞避免，每个轮次只将 cwnd 加 1。")]),t._v(" "),s("p",[t._v("如果出现了超时，则令 ssthresh = cwnd / 2，然后重新执行慢开始。")]),t._v(" "),s("h3",{attrs:{id:"_2-快重传与快恢复"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-快重传与快恢复"}},[t._v("#")]),t._v(" 2. 快重传与快恢复")]),t._v(" "),s("p",[t._v("在接收方，要求每次接收到报文段都应该对最后一个已收到的有序报文段进行确认。例如已经接收到 M1 和 M2，此时收到 M4，应当发送对 M2 的确认。")]),t._v(" "),s("p",[t._v("在发送方，如果收到三个重复确认，那么可以知道下一个报文段丢失，此时执行快重传，立即重传下一个报文段。例如收到三个 M2，则 M3 丢失，立即重传 M3。")]),t._v(" "),s("p",[t._v("在这种情况下，只是丢失个别报文段，而不是网络拥塞。因此执行快恢复，令 ssthresh = cwnd / 2 ，cwnd = ssthresh，注意到此时直接进入拥塞避免。")]),t._v(" "),s("p",[t._v("慢开始和快恢复的快慢指的是 cwnd 的设定值，而不是 cwnd 的增长速率。慢开始 cwnd 设定为 1，而快恢复 cwnd 设定为 ssthresh。")]),t._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:"images/计算机网络/f61b5419-c94a-4df1-8d4d-aed9ae8cc6d5.png",alt:"img"}}),t._v(" "),s("h1",{attrs:{id:"传输层-udp"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#传输层-udp"}},[t._v("#")]),t._v(" 传输层-UDP")]),t._v(" "),s("h2",{attrs:{id:"udp-首部格式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#udp-首部格式"}},[t._v("#")]),t._v(" UDP 首部格式")]),t._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:"images/计算机网络/d4c3a4a1-0846-46ec-9cc3-eaddfca71254.jpg",alt:"img"}}),t._v(" "),s("p",[t._v("首部字段只有 8 个字节，包括源端口、目的端口、长度（报文长度）、检验和。")]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("源端口")]),t._v("：16bit，表示0~65535号端口")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("目的端口")]),t._v("：16bit，表示0~65535号端口")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("长度")]),t._v("：16bit，表示报文的"),s("strong",[t._v("字节数")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("检验和")]),t._v("：")])])]),t._v(" "),s("p",[t._v("伪首部：12 字节，为计算"),s("strong",[t._v("检验和")]),t._v("临时添加，发送时去除。包含IP首部的一些字段。")]),t._v(" "),s("h2",{attrs:{id:"q-tcp和udp不同"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#q-tcp和udp不同"}},[t._v("#")]),t._v(" Q：TCP和UDP不同？")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th"),t._v(" "),s("th",[t._v("TCP")]),t._v(" "),s("th",[t._v("UDP")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("面向")]),t._v(" "),s("td",[t._v("字节流（把应用层传下来的报文看成字节流，把字节流组织成大小不等的数据块）")]),t._v(" "),s("td",[t._v("报文（对于应用程序传下来的报文不合并也不拆分，只是添加 UDP 首部）")])]),t._v(" "),s("tr",[s("td",[t._v("连接")]),t._v(" "),s("td",[t._v("面向连接")]),t._v(" "),s("td",[t._v("无连接")])]),t._v(" "),s("tr",[s("td",[t._v("交付")]),t._v(" "),s("td",[t._v("可靠交付（不丢失，有序）")]),t._v(" "),s("td",[t._v("不可靠， 尽最大可能交付")])]),t._v(" "),s("tr",[s("td",[t._v("拥塞控制")]),t._v(" "),s("td",[t._v("有")]),t._v(" "),s("td",[t._v("无")])]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td",[t._v("全双工")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td",[t._v("点对点（一对一）")]),t._v(" "),s("td",[t._v("一对一、一对多、多对一、多对多")])]),t._v(" "),s("tr",[s("td",[t._v("报文最大长度")]),t._v(" "),s("td",[t._v("无上限（TCP首部的序号并未限制长度）。但建议不超过IP分片限制（1500-ip头20=1480）")]),t._v(" "),s("td",[t._v("65536（UDP首部的长度字段16bit）")])]),t._v(" "),s("tr",[s("td",[t._v("首部")]),t._v(" "),s("td",[t._v("不定长，20~60字节（选项部分可选）")]),t._v(" "),s("td",[t._v("定长，8字节")])]),t._v(" "),s("tr",[s("td",[t._v("伪首部")]),t._v(" "),s("td",[t._v("协议位：6")]),t._v(" "),s("td",[t._v("协议位：17")])]),t._v(" "),s("tr",[s("td",[t._v("首部的长度字段")]),t._v(" "),s("td",[t._v("4bit，指示首部长度（字节数）")]),t._v(" "),s("td",[t._v("2bit，指示报文长度")])])])]),t._v(" "),s("h2",{attrs:{id:"q-什么是tcp拆包、粘包"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#q-什么是tcp拆包、粘包"}},[t._v("#")]),t._v(" Q：什么是TCP拆包、粘包？")]),t._v(" "),s("p",[t._v("UDP对上层（应用层）报文直接加首部处理，既不合并也不拆分，因此说UDP协议是面向报文的")]),t._v(" "),s("p",[t._v("而TCP面向字节流，将应用层数据视为一连串字节流，并无具体含义，编号仅是为了传输。因此发送时，可能会将有具体含义的某段字节流拆分为多个TCP段（包），称为"),s("strong",[t._v("拆包")]),t._v("。反之，将某几段字节流合并为一个TCP段，称为"),s("strong",[t._v("粘包")]),t._v("。")]),t._v(" "),s("p",[t._v("两种解决：")]),t._v(" "),s("ol",[s("li",[t._v("对每个包，包开头指明实际长度")]),t._v(" "),s("li",[t._v("将每个包封装为固定长度，不足的填充")])]),t._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:"images/计算机网络/image-20230131001118474.png",alt:"image-20230131001118474"}}),t._v(" "),s("h1",{attrs:{id:"应用层-http"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#应用层-http"}},[t._v("#")]),t._v(" 应用层-HTTP")]),t._v(" "),s("h2",{attrs:{id:"http头部"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#http头部"}},[t._v("#")]),t._v(" HTTP头部")]),t._v(" "),s("p",[t._v("是HTTP报文的一部分")]),t._v(" "),s("h3",{attrs:{id:"_1-通用头"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-通用头"}},[t._v("#")]),t._v(" 1.通用头")]),t._v(" "),s("p",[t._v("是客户端和服务器都可以使用的头部，可以在客户端、服务器和其他应用程序之间提供一些非常有用的通用功能")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("首部字段名")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("Cache-Control")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("控制缓存的行为")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("Connection")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("控制不再转发给代理的首部字段、管理持久连接")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("Date")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("创建报文的日期时间")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("Pragma")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("报文指令")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("Trailer")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("报文末端的首部一览")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("Transfer-Encoding")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("指定报文主体的传输编码方式")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("Upgrade")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("升级为其他协议")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("Via")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("代理服务器的相关信息")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("Warning")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("错误通知")])])])]),t._v(" "),s("h3",{attrs:{id:"_2-请求头"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-请求头"}},[t._v("#")]),t._v(" 2.请求头")]),t._v(" "),s("p",[t._v("是请求报文特有的，它们为服务器提供了一些额外信息，比如客户端希望接收什么类型的数据")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("首部字段名")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("Accept")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("用户代理可处理的媒体类型")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("Accept-Charset")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("优先的字符集")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("Accept-Encoding")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("优先的内容编码")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("Accept-Language")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("优先的语言（自然语言）")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("Authorization")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("Web 认证信息")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("Expect")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("期待服务器的特定行为")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("From")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("用户的电子邮箱地址")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("Host")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("请求资源所在服务器")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("If-Match")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("比较实体标记（ETag）")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("If-Modified-Since")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("比较资源的更新时间")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("If-None-Match")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("比较实体标记（与 If-Match 相反）")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("If-Range")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("资源未更新时发送实体 Byte 的范围请求")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("If-Unmodified-Since")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("比较资源的更新时间（与 If-Modified-Since 相反）")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("Max-Forwards")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("最大传输逐跳数")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("Proxy-Authorization")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("代理服务器要求客户端的认证信息")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("Range")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("实体的字节范围请求")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("Referer")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("对请求中 URI 的原始获取方")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("TE")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("传输编码的优先级")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("User-Agent")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("HTTP 客户端程序的信息")])])])]),t._v(" "),s("h3",{attrs:{id:"_3-响应头"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-响应头"}},[t._v("#")]),t._v(" 3.响应头")]),t._v(" "),s("p",[t._v("便于客户端提供信息，比如，客服端在与哪种类型的服务器进行交互")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("首部字段名")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("Accept-Ranges")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("是否接受字节范围请求")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("Age")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("推算资源创建经过时间")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("ETag")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("资源的匹配信息")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("Location")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("令客户端重定向至指定 URI")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("Proxy-Authenticate")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("代理服务器对客户端的认证信息")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("Retry-After")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("对再次发起请求的时机要求")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("Server")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("HTTP 服务器的安装信息")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("Vary")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("代理服务器缓存的管理信息")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("WWW-Authenticate")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("服务器对客户端的认证信息")])])])]),t._v(" "),s("h3",{attrs:{id:"_4-实体头"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-实体头"}},[t._v("#")]),t._v(" 4.实体头")]),t._v(" "),s("p",[t._v("指的是用于应对实体主体部分的头部，比如，可以用实体头部来说明实体主体部分的数据类型")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("首部字段名")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("Allow")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("资源可支持的 HTTP 方法")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("Content-Encoding")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("实体主体适用的编码方式")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("Content-Language")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("实体主体的自然语言")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("Content-Length")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("实体主体的大小")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("Content-Location")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("替代对应资源的 URI")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("Content-MD5")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("实体主体的报文摘要")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("Content-Range")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("实体主体的位置范围")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("Content-Type")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("实体主体的媒体类型")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("Expires")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("实体主体过期的日期时间")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("Last-Modified")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("资源的最后修改日期时间")])])])]),t._v(" "),s("h2",{attrs:{id:"请求报文"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#请求报文"}},[t._v("#")]),t._v(" 请求报文")]),t._v(" "),s("p",[t._v("客户端发送一个请求报文给服务器，服务器根据请求报文中的信息进行处理，并将处理结果放入响应报文中返回给客户端。")]),t._v(" "),s("p",[t._v("请求报文结构：")]),t._v(" "),s("ul",[s("li",[t._v("第一行是包含了请求方法、URL、协议版本；")]),t._v(" "),s("li",[t._v("接下来的多行都是请求首部 Header，每个首部都有一个首部名称，以及对应的值。")]),t._v(" "),s("li",[t._v("一个"),s("strong",[t._v("空行")]),t._v("用来分隔首部和内容主体 Body")]),t._v(" "),s("li",[t._v("最后是请求的内容主体（13行")])]),t._v(" "),s("div",{staticClass:"language-text line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('GET http://www.example.com/ HTTP/1.1\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9\nAccept-Encoding: gzip, deflate\nAccept-Language: zh-CN,zh;q=0.9,en;q=0.8\nCache-Control: max-age=0\nHost: www.example.com\nIf-Modified-Since: Thu, 17 Oct 2019 07:18:26 GMT\nIf-None-Match: "3147526947+gzip"\nProxy-Connection: keep-alive\nUpgrade-Insecure-Requests: 1\nUser-Agent: Mozilla/5.0 xxx\n\nparam1=1&amp;param2=2\n')])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br")])]),s("h2",{attrs:{id:"响应报文"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#响应报文"}},[t._v("#")]),t._v(" 响应报文")]),t._v(" "),s("p",[t._v("服务器返回给客户端的报文")]),t._v(" "),s("ul",[s("li",[t._v("第一行包含协议版本、状态码以及描述，最常见的是 200 OK 表示请求成功了")]),t._v(" "),s("li",[t._v("接下来多行也是首部内容")]),t._v(" "),s("li",[t._v("一个"),s("strong",[t._v("空行")]),t._v("分隔首部和内容主体")]),t._v(" "),s("li",[t._v("最后是响应的内容主体（18行")])]),t._v(" "),s("div",{staticClass:"language-text line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('HTTP/1.1 200 OK\nAge: 529651\nCache-Control: max-age=604800\nConnection: keep-alive\nContent-Encoding: gzip\nContent-Length: 648\nContent-Type: text/html; charset=UTF-8\nDate: Mon, 02 Nov 2020 17:53:39 GMT\nEtag: "3147526947+ident+gzip"\nExpires: Mon, 09 Nov 2020 17:53:39 GMT\nKeep-Alive: timeout=4\nLast-Modified: Thu, 17 Oct 2019 07:18:26 GMT\nProxy-Connection: keep-alive\nServer: ECS (sjc/16DF)\nVary: Accept-Encoding\nX-Cache: HIT\n\n&lt;!doctype html>\n&lt;html>\n&lt;head>\n    &lt;title>Example Domain&lt;/title>\n\t// 省略... \n&lt;/body>\n&lt;/html>\n')])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br")])]),s("h2",{attrs:{id:"url"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#url"}},[t._v("#")]),t._v(" URL")]),t._v(" "),s("p",[t._v("HTTP 使用 URL（ "),s("strong",[t._v("U")]),t._v(" niform "),s("strong",[t._v("R")]),t._v("esource "),s("strong",[t._v("L")]),t._v("ocator，统一资源定位符）来定位资源，它是 URI（"),s("strong",[t._v("U")]),t._v("niform "),s("strong",[t._v("R")]),t._v("esource "),s("strong",[t._v("I")]),t._v("dentifier，统一资源标识符）的子集，URL 在 URI 的基础上增加了定位能力。")]),t._v(" "),s("p",[t._v("URN（Uniform Resource Name，统一资源名称），也是URI的子集，它只是用来定义一个资源的名称，并不具备定位该资源的能力。例如 urn:isbn:0451450523 用来定义一个书籍名称，但是却没有表示怎么找到这本书。")]),t._v(" "),s("p",[s("img",{attrs:{src:"images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/8441b2c4-dca7-4d6b-8efb-f22efccaf331.png",alt:"img"}})]),t._v(" "),s("h2",{attrs:{id:"http方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#http方法"}},[t._v("#")]),t._v(" HTTP方法")]),t._v(" "),s("p",[t._v("HTTP/1.0 定义了三种：GET, POST 和 HEAD")]),t._v(" "),s("p",[t._v("HTTP/1.1 增加了六种：OPTIONS, PUT, PATCH, DELETE, TRACE 和 CONNECT")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("方法")]),t._v(" "),s("th",[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("GET")]),t._v(" "),s("td",[t._v("请求指定的页面信息，并返回具体内容，通常只用于读取数据。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("POST")]),t._v(" "),s("td",[t._v("向指定资源提交数据进行处理请求（例如提交表单或者上传文件）。数据被包含在请求体中。POST 请求可能会导致新的资源的建立或已有资源的更改。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("HEAD")]),t._v(" "),s("td",[t._v("类似于 GET 请求，只不过返回的响应中没有具体的内容，用于获取报头，确认 URL 的有效性以及资源更新的日期时间等。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("=================HTTP1.1新增==========")]),t._v(" "),s("td",[t._v("======================HTTP1.1新增=======================")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("PUT")]),t._v(" "),s("td",[t._v("替换 URL 标识的资源（如文件等），没有的话就新增，"),s("strong",[t._v("不带验证机制")]),t._v("。（不安全）")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("DELETE")]),t._v(" "),s("td",[t._v("请求服务器删除资源数据，同样不带验证机制。（不安全）")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("PATCH")]),t._v(" "),s("td",[t._v("是对 PUT 方法的补充，用来对已知资源进行"),s("strong",[t._v("局部更新")]),t._v("（PUT只能完全替换）。（不安全）")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("CONNECT")]),t._v(" "),s("td",[t._v("将服务器作为"),s("strong",[t._v("代理")]),t._v("，建立隧道让服务器代替用户进行访问。使用 SSL（Secure Sockets Layer，安全套接层）和 TLS（Transport Layer Security，传输层安全）协议把通信内容加密后经网络隧道传输。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("OPTIONS")]),t._v(" "),s("td",[t._v("查询指定的 URL 能够支持的 HTTP 请求方法。例如会返回 "),s("code",[t._v("Allow: GET, POST, HEAD, OPTIONS")]),t._v(" 这样的内容。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("TRACE")]),t._v(" "),s("td",[t._v("回显服务器收到的请求数据，即服务器返回自己收到的数据，主要用于测试和诊断。（不安全，容易受到 XST 攻击）")])])])]),t._v(" "),s("p",[t._v("put示例：")]),t._v(" "),s("div",{staticClass:"language-html line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[t._v("PUT /new.html HTTP/1.1\nHost: example.com\nContent-type: text/html\nContent-length: 16\n\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("New File"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("p",[t._v("patch示例：")]),t._v(" "),s("div",{staticClass:"language-html line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[t._v('PATCH /file.txt HTTP/1.1\nHost: www.example.com\nContent-Type: application/example\nIf-Match: "e0023aa4e"\nContent-Length: 100\n\n[description of changes]\n')])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br")])]),s("p",[t._v("delete示例：")]),t._v(" "),s("div",{staticClass:"language-html line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[t._v("DELETE /file.html HTTP/1.1\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h2",{attrs:{id:"http状态码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#http状态码"}},[t._v("#")]),t._v(" HTTP状态码")]),t._v(" "),s("p",[t._v("服务器返回的 "),s("strong",[t._v("响应报文")]),t._v(" 中第一行为状态行，包含了状态码以及原因短语，用来告知客户端请求的结果。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("状态码")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("类别")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("含义")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("1XX")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("Informational（信息）")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("接收的请求正在处理")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("2XX")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("Success（成功）")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("请求正常处理完毕")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("3XX")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("Redirection（重定向）")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("需要进行附加操作以完成请求")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("4XX")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("Client Error（客户端错误）")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("服务器无法处理请求")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("5XX")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("Server Error（服务器错误）")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("服务器处理请求出错")])])])]),t._v(" "),s("h3",{attrs:{id:"_1xx-信息"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1xx-信息"}},[t._v("#")]),t._v(" 1XX 信息")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("100 Continue")]),t._v(" ：表明到目前为止都很正常，客户端可以继续发送请求或者忽略这个响应。")]),t._v(" "),s("li",[t._v("101 协议切换：例如从HTTP切换为Websocket")])]),t._v(" "),s("h3",{attrs:{id:"_2xx-成功"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2xx-成功"}},[t._v("#")]),t._v(" 2XX 成功")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("200 OK")])]),t._v(" "),s("li",[s("strong",[t._v("204 No Content")]),t._v(" ：请求已经成功处理，但是返回的响应报文不包含实体的主体部分。一般在只需要从客户端往服务器发送信息，而不需要返回数据时使用。")]),t._v(" "),s("li",[s("strong",[t._v("206 Partial Content")]),t._v(" ：表示客户端进行了范围请求，响应报文包含由 Content-Range 指定范围的实体内容。")])]),t._v(" "),s("h3",{attrs:{id:"_3xx-重定向"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3xx-重定向"}},[t._v("#")]),t._v(" 3XX 重定向")]),t._v(" "),s("p",[t._v("指当浏览器请求一个URL时，服务器返回一个重定向指令，告诉浏览器地址已经变了，麻烦使用新的URL再重新发送新请求。")]),t._v(" "),s("p",[s("strong",[t._v("过程")])]),t._v(" "),s("p",[t._v("如果浏览器发送"),s("code",[t._v("GET /hi")]),t._v("请求，Spring的"),s("code",[t._v("RedirectServlet")]),t._v("将处理此请求。由于"),s("code",[t._v("RedirectServlet")]),t._v("在内部又发送了重定向响应，因此，浏览器会收到如下响应：")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("HTTP/1.1 302 Found\nLocation: /hello\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("当浏览器收到302响应后，它会立刻根据"),s("code",[t._v("Location")]),t._v("的指示发送一个新的"),s("code",[t._v("GET /hello")]),t._v("请求。")]),t._v(" "),s("div",{staticClass:"language-ascii line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("┌───────┐   GET /hi     ┌───────────────┐\n│Browser│ ────────────> │RedirectServlet│\n│       │ <──────────── │               │\n└───────┘   302         └───────────────┘\n\n\n┌───────┐  GET /hello   ┌───────────────┐\n│Browser│ ────────────> │ HelloServlet  │\n│       │ <──────────── │               │\n└───────┘   200 <html>  └───────────────┘\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br")])]),s("p",[t._v("观察Chrome浏览器的网络请求，可以看到两次HTTP请求，并且浏览器的地址栏路径自动更新为"),s("code",[t._v("/hello")]),t._v("：")]),t._v(" "),s("img",{staticStyle:{zoom:"67%"},attrs:{src:"images/计算机网络/image-20230104172235427.png",alt:"image-20230104172235427"}}),t._v(" "),s("p",[s("strong",[t._v("注意")]),t._v("：301和302区别：如果服务器发送301，浏览器会"),s("strong",[t._v("缓存")]),s("code",[t._v("/hi")]),t._v("到"),s("code",[t._v("/hello")]),t._v("这个重定向的关联，下次请求"),s("code",[t._v("/hi")]),t._v("的时候，浏览器就直接发送"),s("code",[t._v("/hello")]),t._v("请求了。")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("301 Moved Permanently")]),t._v(" ：永久性重定向")]),t._v(" "),s("li",[s("strong",[t._v("302 Found")]),t._v(" ：临时性重定向")]),t._v(" "),s("li",[s("strong",[t._v("303 See Other")]),t._v(" ：和 302 有着相同的功能，但是 303 明确要求客户端应该采用 GET 方法获取资源。")]),t._v(" "),s("li",[t._v("注：虽然 HTTP 协议规定 301、302 状态下重定向时不允许把 POST 方法改成 GET 方法，但是大多数浏览器都会在 301、302 和 303 状态下的重定向把 POST 方法改成 GET 方法。")]),t._v(" "),s("li",[s("strong",[t._v("304 Not Modified")]),t._v(" ：如果请求报文首部包含一些条件，例如：If-Match，If-Modified-Since，If-None-Match，If-Range，If-Unmodified-Since，如果不满足条件，则服务器会返回 304 状态码。")]),t._v(" "),s("li",[s("strong",[t._v("307 Temporary Redirect")]),t._v(" ：临时重定向，与 302 的含义类似，但是 307 要求浏览器不会把重定向请求的 POST 方法改成 GET 方法。")])]),t._v(" "),s("h3",{attrs:{id:"_4xx-客户端错误"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4xx-客户端错误"}},[t._v("#")]),t._v(" 4XX 客户端错误")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("400 Bad Request")]),t._v(" ：请求报文中存在语法错误。")]),t._v(" "),s("li",[s("strong",[t._v("401 Unauthorized")]),t._v(" ：该状态码表示发送的请求需要有认证信息（BASIC 认证、DIGEST 认证）。如果之前已进行过一次请求，则表示用户认证失败。")]),t._v(" "),s("li",[s("strong",[t._v("403 Forbidden")]),t._v(" ：请求被拒绝。")]),t._v(" "),s("li",[s("strong",[t._v("404 Not Found")]),t._v("：服务器上没有找到请求的资源")])]),t._v(" "),s("h3",{attrs:{id:"_5xx-服务器错误"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5xx-服务器错误"}},[t._v("#")]),t._v(" 5XX 服务器错误")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("500 Internal Server Error")]),t._v(" ：服务器正在执行请求时发生错误。")]),t._v(" "),s("li",[s("strong",[t._v("503 Service Unavailable")]),t._v(" ：服务器暂时处于超负载或正在进行停机维护，现在无法处理请求。")])]),t._v(" "),s("h2",{attrs:{id:"连接管理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#连接管理"}},[t._v("#")]),t._v(" 连接管理")]),t._v(" "),s("p",[s("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com/HTTP1_x_Connections.png",alt:"img"}}),t._v("****")]),t._v(" "),s("p",[s("strong",[t._v("短连接与长连接")])]),t._v(" "),s("p",[t._v("当浏览器访问一个包含多张图片的 HTML 页面时，除了请求访问的 HTML 页面资源，还会请求图片资源。如果每进行一次 HTTP 通信就要新建一个 TCP 连接，那么开销会很大。")]),t._v(" "),s("p",[t._v("长连接只需要建立一次 TCP 连接就能进行多次 HTTP 通信。")]),t._v(" "),s("ul",[s("li",[t._v("从 HTTP/1.1 开始默认是长连接的，如果要断开连接，需要由客户端或者服务器端提出断开，使用 "),s("code",[t._v("Connection : close")]),t._v("；")]),t._v(" "),s("li",[t._v("在 HTTP/1.1 之前默认是短连接的，如果需要使用长连接，则使用 "),s("code",[t._v("Connection : Keep-Alive")]),t._v("。")])]),t._v(" "),s("p",[s("strong",[t._v("流水线")])]),t._v(" "),s("p",[t._v("默认情况下，HTTP 请求是按顺序发出的，下一个请求只有在当前请求收到响应之后才会被发出。由于受网络延迟和带宽的限制，在下一个请求被发送到服务器之前，可能需要等待很长时间。")]),t._v(" "),s("p",[t._v("流水线：同一条长连接上连续发出请求，而不用等待响应返回，这样可以减少延迟。")]),t._v(" "),s("h2",{attrs:{id:"session"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#session"}},[t._v("#")]),t._v(" Session")]),t._v(" "),s("p",[t._v("Session 是浏览器和服务器会话过程中，服务器会分配的一块储存空间 。")]),t._v(" "),s("p",[t._v("因为HTTP协议是一个无状态协议，即Web应用程序无法区分收到的两个HTTP请求是否是同一个浏览器发出的。为了跟踪用户状态，服务器可以向浏览器分配一个唯一ID，并以Cookie的形式发送到浏览器，浏览器在后续访问时总是附带此Cookie，这样，服务器就可以识别用户身份。")]),t._v(" "),s("p",[s("strong",[t._v("Session机制")])]),t._v(" "),s("p",[t._v("指这种基于唯一ID识别用户身份的机制。每个用户第一次访问服务器后，会自动获得一个Session ID（即发送给浏览器的Cookie）。如果用户在一段时间内没有访问服务器，那么Session会自动失效，下次即使带着上次分配的Session ID访问，服务器也认为这是一个新用户，会分配新的Session ID。")]),t._v(" "),s("h3",{attrs:{id:"java操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#java操作"}},[t._v("#")]),t._v(" java操作")]),t._v(" "),s("p",[t._v("JavaEE的Servlet机制内建了对Session的支持。我们以登录为例，当一个用户登录成功后，我们就可以把这个用户的名字放入一个"),s("code",[t._v("HttpSession")]),t._v("对象，以便后续访问其他页面的时候，能直接从"),s("code",[t._v("HttpSession")]),t._v("取出用户名：")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@WebServlet")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("urlPatterns "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/signin"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SignInServlet")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HttpServlet")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 模拟一个数据库:")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Map")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" users "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Map")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("of")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bob"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bob123"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"alice"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"alice123"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tom"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tomcat"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// POST请求时处理用户登录:")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("protected")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("doPost")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HttpServletRequest")]),t._v(" req"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HttpServletResponse")]),t._v(" resp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ServletException")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IOException")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" req"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getParameter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"username"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" password "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" req"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getParameter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"password"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" expectedPassword "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" users"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toLowerCase")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("expectedPassword "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" expectedPassword"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("equals")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("password"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 判断用户登录成功后，立刻将用户名放入当前HttpSession中")]),t._v("\n            req"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getSession")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setAttribute")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"user"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            resp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sendRedirect")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            resp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sendError")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HttpServletResponse")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("SC_FORBIDDEN")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br")])]),s("p",[t._v("服务器识别Session的关键就是依靠一个名为"),s("code",[t._v("JSESSIONID")]),t._v("的Cookie。在Servlet中第一次调用"),s("code",[t._v("req.getSession()")]),t._v("时，Servlet容器自动创建一个Session ID，然后通过一个名为"),s("code",[t._v("JSESSIONID")]),t._v("的Cookie发送给浏览器：")]),t._v(" "),s("p",[s("img",{attrs:{src:"images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/l.jpeg",alt:"session"}})]),t._v(" "),s("p",[t._v("除了可以将用户信息通过 Cookie 存储在用户浏览器中，也可以利用 Session 存储在服务器端，存储在服务器端的信息更加安全。")]),t._v(" "),s("p",[t._v("Session 可以存储在服务器上的文件、数据库或者内存中。也可以将 Session 存储在 Redis 这种内存型数据库中，效率会更高。")]),t._v(" "),s("h2",{attrs:{id:"cookie"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cookie"}},[t._v("#")]),t._v(" Cookie")]),t._v(" "),s("p",[t._v("因为HTTP 协议是无状态的，HTTP/1.1 引入 Cookie 来保存状态信息，是服务器发送到"),s("strong",[t._v("用户浏览器")]),t._v("并保存在"),s("strong",[t._v("本地")]),t._v("的一小块数据，它会在浏览器之后向同一服务器再次发起请求时被携带上，用于告知服务端两个请求是否来自同一浏览器。")]),t._v(" "),s("p",[t._v("Cookie是Session机制的一种实现方式（其他实现还有隐藏表单、URL末尾附加ID等，但不如Cookie常用）。实际上，Servlet提供的"),s("code",[t._v("HttpSession")]),t._v("本质上就是通过一个名为"),s("code",[t._v("JSESSIONID")]),t._v("的Cookie来跟踪用户会话的。除了这个名称外，其他名称的Cookie我们可以任意使用。")]),t._v(" "),s("p",[t._v("Cookie 曾一度用于客户端数据的存储，现已淘汰。新的浏览器 API 已经允许开发者直接将数据存储到本地，如使用 Web storage API（本地存储和会话存储）或 IndexedDB。")]),t._v(" "),s("h3",{attrs:{id:"创建过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建过程"}},[t._v("#")]),t._v(" 创建过程")]),t._v(" "),s("p",[t._v("服务器发送的响应报文中包含首部字段： Set-Cookie 。客户端得到响应报文后把 Cookie 内容保存到浏览器中。")]),t._v(" "),s("div",{staticClass:"language-html line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[t._v("HTTP/1.0 200 OK\nContent-type: text/html\nSet-Cookie: yummy_cookie=choco\nSet-Cookie: tasty_cookie=strawberry\n\n[page content]\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("p",[t._v("客户端之后对同一个服务器发送请求时，会从浏览器中取出 Cookie 信息并通过 Cookie 请求首部字段发送给服务器。")]),t._v(" "),s("div",{staticClass:"language-html line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[t._v("GET /sample_page.html HTTP/1.1\nHost: www.example.org\nCookie: yummy_cookie=choco; tasty_cookie=strawberry\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("h3",{attrs:{id:"持久性-cookie"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#持久性-cookie"}},[t._v("#")]),t._v(" 持久性 Cookie")]),t._v(" "),s("ul",[s("li",[t._v("会话期 Cookie：浏览器关闭之后它会被自动删除，也就是说它仅在会话期内有效。")]),t._v(" "),s("li",[t._v("持久性 Cookie：指定过期时间（Expires）或有效期（max-age）之后就成为了持久性的 Cookie。")])]),t._v(" "),s("div",{staticClass:"language-html line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[t._v("Set-Cookie: id=a3fWa; Expires=Wed, 21 Oct 2015 07:28:00 GMT;\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h3",{attrs:{id:"java操作-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#java操作-2"}},[t._v("#")]),t._v(" java操作")]),t._v(" "),s("p",[t._v("如果我们想要设置一个Cookie，例如，记录用户选择的语言，可以编写一个"),s("code",[t._v("LanguageServlet")]),t._v("：")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@WebServlet")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("urlPatterns "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/pref"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LanguageServlet")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HttpServlet")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Set")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("LANGUAGES")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("of")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"en"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"zh"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("protected")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("doGet")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HttpServletRequest")]),t._v(" req"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HttpServletResponse")]),t._v(" resp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ServletException")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IOException")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" lang "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" req"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getParameter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lang"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("LANGUAGES")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("contains")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lang"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建一个新的Cookie:")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Cookie")]),t._v(" cookie "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Cookie")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lang"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" lang"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 该Cookie生效的路径范围:")]),t._v("\n            cookie"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setPath")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 该Cookie有效期:")]),t._v("\n            cookie"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setMaxAge")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8640000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 8640000秒=100天")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将该Cookie添加到响应:")]),t._v("\n            resp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("addCookie")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cookie"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果访问的是https网页，还需要调用setSecure(true)，否则浏览器不会发送该Cookie。")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        resp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sendRedirect")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br")])]),s("p",[t._v("读取Cookie主要依靠遍历"),s("code",[t._v("HttpServletRequest")]),t._v("附带的所有Cookie。")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseLanguageFromCookie")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HttpServletRequest")]),t._v(" req"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取请求附带的所有Cookie:")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Cookie")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" cookies "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" req"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getCookies")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果获取到Cookie:")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cookies "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 循环每个Cookie:")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Cookie")]),t._v(" cookie "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" cookies"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果Cookie名称为lang:")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cookie"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("equals")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lang"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回Cookie的值:")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" cookie"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getValue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回默认值:")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"en"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br")])]),s("h3",{attrs:{id:"浏览器禁用-cookie"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#浏览器禁用-cookie"}},[t._v("#")]),t._v(" 浏览器禁用 Cookie")]),t._v(" "),s("p",[t._v("此时无法使用 Cookie 保存用户信息，只能用 Session。")]),t._v(" "),s("p",[t._v("此外，不能再将 Session ID 存放到 Cookie 中，而是使用 "),s("strong",[t._v("URL 重写技术")]),t._v("，将 Session ID 作为 URL 的参数进行传递。")]),t._v(" "),s("h3",{attrs:{id:"安全性问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安全性问题"}},[t._v("#")]),t._v(" 安全性问题")]),t._v(" "),s("p",[t._v("存储在浏览器中，容易被恶意查看")]),t._v(" "),s("h3",{attrs:{id:"服务器集群问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#服务器集群问题"}},[t._v("#")]),t._v(" 服务器集群问题")]),t._v(" "),s("p",[t._v("多台服务器集群使用反向代理作为网站入口：")]),t._v(" "),s("div",{staticClass:"language-ascii line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("                                     ┌────────────┐\n                                ┌───>│Web Server 1│\n                                │    └────────────┘\n┌───────┐     ┌─────────────┐   │    ┌────────────┐\n│Browser│────>│Reverse Proxy│───┼───>│Web Server 2│\n└───────┘     └─────────────┘   │    └────────────┘\n                                │    ┌────────────┐\n                                └───>│Web Server 3│\n                                     └────────────┘\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br")])]),s("p",[t._v("如果多台Web Server采用无状态集群，那么反向代理总是以轮询方式将请求依次转发给每台Web Server，这会造成一个用户在Web Server 1存储的Session信息，在Web Server 2和3上并不存在，即从Web Server 1登录后，如果后续请求被转发到Web Server 2或3，那么用户看到的仍然是未登录状态。")]),t._v(" "),s("p",[s("strong",[t._v("解决")])]),t._v(" "),s("ul",[s("li",[t._v("方案一：在所有Web Server之间进行"),s("strong",[t._v("Session复制")]),t._v("，但这样会严重消耗网络带宽，并且，每个Web Server的内存均存储所有用户的Session，内存使用率很低。")]),t._v(" "),s("li",[t._v("方案二：采用"),s("strong",[t._v("粘滞会话")]),t._v("（Sticky Session）机制，即反向代理在转发请求的时候，总是根据JSESSIONID的值判断，相同的JSESSIONID总是转发到固定的Web Server，但这需要反向代理的支持。")])]),t._v(" "),s("p",[t._v("无论采用何种方案，使用Session机制，会使得Web Server的集群很难扩展，因此，Session适用于中小型Web应用程序。"),s("strong",[t._v("对于大型Web应用程序来说，通常需要避免使用Session机制")]),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"使用-session-维护用户登录状态"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用-session-维护用户登录状态"}},[t._v("#")]),t._v(" "),s("strong",[t._v("使用 Session 维护用户登录状态")])]),t._v(" "),s("p",[s("strong",[t._v("Session存服务端redis，客户端只存Session ID（放Cookie）")])]),t._v(" "),s("ul",[s("li",[t._v("用户进行登录时，用户提交包含用户名和密码的表单，放入 HTTP 请求报文中；")]),t._v(" "),s("li",[t._v("服务器验证该用户名和密码，如果正确则把用户信息存储到 Redis 中，它在 Redis 中的 Key 称为 Session ID；")]),t._v(" "),s("li",[t._v("服务器返回的响应报文的 Set-Cookie 首部字段包含了这个 Session ID（需要考虑安全性，不能让它被恶意攻击者轻易获取），客户端收到响应报文之后将该 Cookie 值存入浏览器中；")]),t._v(" "),s("li",[t._v("客户端之后对同一个服务器进行请求时会包含该 Cookie 值，服务器收到之后提取出 Session ID，从 Redis 中取出用户信息，继续之前的业务操作。")])]),t._v(" "),s("h2",{attrs:{id:"q-cookie与session比较"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#q-cookie与session比较"}},[t._v("#")]),t._v(" Q：Cookie与Session比较？")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th"),t._v(" "),s("th",[t._v("Cookie")]),t._v(" "),s("th",[t._v("客户端Session")]),t._v(" "),s("th",[t._v("服务端Session")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("格式")]),t._v(" "),s("td",[t._v("ASCII码字符串")]),t._v(" "),s("td",[t._v("字符串")]),t._v(" "),s("td",[t._v("任意类型（但本质上还是字符串）")])]),t._v(" "),s("tr",[s("td",[t._v("大小")]),t._v(" "),s("td",[t._v("4KB")]),t._v(" "),s("td",[t._v("5MB（在浏览器中称sessionStorage）")]),t._v(" "),s("td",[t._v("无上限")])]),t._v(" "),s("tr",[s("td",[t._v("生命周期")]),t._v(" "),s("td",[t._v("过期时间 之前，一直有效（页面或浏览器关闭后失效）")]),t._v(" "),s("td",[t._v("过期时间 之前，一直有效；（页面或浏览器关闭后失效）")]),t._v(" "),s("td",[t._v("一直有效（服务器程序终止后失效）")])]),t._v(" "),s("tr",[s("td",[t._v("存储位置")]),t._v(" "),s("td",[t._v("浏览器（客户端）")]),t._v(" "),s("td",[t._v("浏览器（客户端）")]),t._v(" "),s("td",[t._v("服务器上（文件、数据库或者内存，甚至Redis）")])]),t._v(" "),s("tr",[s("td",[t._v("安全性")]),t._v(" "),s("td",[t._v("差，易被恶意查看（解决：加密，在服务器解密）")]),t._v(" "),s("td"),t._v(" "),s("td",[t._v("好，因为不存客户端。可以安全存放用户信息")])]),t._v(" "),s("tr",[s("td",[t._v("用途")]),t._v(" "),s("td",[t._v("会话状态管理、个性化设置、浏览器行为跟踪")]),t._v(" "),s("td"),t._v(" "),s("td",[t._v("同Cookie")])])])]),t._v(" "),s("h2",{attrs:{id:"缓存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#缓存"}},[t._v("#")]),t._v(" 缓存")]),t._v(" "),s("h3",{attrs:{id:"优点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#优点"}},[t._v("#")]),t._v(" 优点")]),t._v(" "),s("ul",[s("li",[t._v("缓解服务器压力；")]),t._v(" "),s("li",[t._v("降低客户端获取资源的延迟：缓存通常位于内存中，读取缓存的速度更快。并且缓存服务器在地理位置上也有可能比源服务器来得近，例如浏览器缓存。")])]),t._v(" "),s("h3",{attrs:{id:"实现方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实现方法"}},[t._v("#")]),t._v(" 实现方法")]),t._v(" "),s("ul",[s("li",[t._v("让代理服务器进行缓存；")]),t._v(" "),s("li",[t._v("让客户端浏览器进行缓存。")])]),t._v(" "),s("h3",{attrs:{id:"cache-control"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cache-control"}},[t._v("#")]),t._v(" Cache-Control")]),t._v(" "),s("p",[t._v("HTTP/1.1 通过 Cache-Control 首部字段来控制缓存。")]),t._v(" "),s("p",[s("strong",[t._v("1 禁止进行缓存")])]),t._v(" "),s("p",[t._v("no-store 指令规定不能对请求或响应的任何一部分进行缓存。")]),t._v(" "),s("div",{staticClass:"language-html line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[t._v("Cache-Control: no-store\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[s("strong",[t._v("2 强制确认缓存")])]),t._v(" "),s("p",[t._v("no-cache 指令规定缓存服务器需要先向源服务器验证缓存资源的有效性，只有当缓存资源有效时才能使用该缓存对客户端的请求进行响应。")]),t._v(" "),s("div",{staticClass:"language-html line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[t._v("Cache-Control: no-cache\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[s("strong",[t._v("3 私有缓存和公共缓存")])]),t._v(" "),s("p",[t._v("private 指令规定了将资源作为私有缓存，只能被单独用户使用，一般存储在用户浏览器中。")]),t._v(" "),s("div",{staticClass:"language-html line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[t._v("Cache-Control: private\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("public 指令规定了将资源作为公共缓存，可以被多个用户使用，一般存储在代理服务器中。")]),t._v(" "),s("div",{staticClass:"language-html line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[t._v("Cache-Control: public\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[s("strong",[t._v("4 缓存过期机制")])]),t._v(" "),s("p",[t._v("max-age 指令出现在请求报文，并且缓存资源的缓存时间小于该指令指定的时间，那么就能接受该缓存。")]),t._v(" "),s("p",[t._v("max-age 指令出现在响应报文，表示缓存资源在缓存服务器中保存的时间。")]),t._v(" "),s("div",{staticClass:"language-html line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[t._v("Cache-Control: max-age=31536000\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("Expires 首部字段也可以用于告知缓存服务器该资源什么时候会过期。")]),t._v(" "),s("div",{staticClass:"language-html line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[t._v("Expires: Wed, 04 Jul 2012 08:26:05 GMT\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("ul",[s("li",[t._v("在 HTTP/1.1 中，会优先处理 max-age 指令；")]),t._v(" "),s("li",[t._v("在 HTTP/1.0 中，max-age 指令会被忽略掉。")])]),t._v(" "),s("h3",{attrs:{id:"内容协商"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#内容协商"}},[t._v("#")]),t._v(" 内容协商")]),t._v(" "),s("p",[t._v("通过内容协商返回最合适的内容，例如根据浏览器的默认语言选择返回中文界面还是英文界面。")]),t._v(" "),s("p",[s("strong",[t._v("类型")])]),t._v(" "),s("p",[s("strong",[t._v("1.1 服务端驱动型")])]),t._v(" "),s("p",[t._v("客户端设置特定的 HTTP 首部字段，例如 Accept、Accept-Charset、Accept-Encoding、Accept-Language，服务器根据这些字段返回特定的资源。")]),t._v(" "),s("p",[t._v("它存在以下问题：")]),t._v(" "),s("ul",[s("li",[t._v("服务器很难知道客户端浏览器的全部信息；")]),t._v(" "),s("li",[t._v("客户端提供的信息相当冗长（HTTP/2 协议的首部压缩机制缓解了这个问题），并且存在隐私风险（HTTP 指纹识别技术）；")]),t._v(" "),s("li",[t._v("给定的资源需要返回不同的展现形式，共享缓存的效率会降低，而服务器端的实现会越来越复杂。")])]),t._v(" "),s("p",[s("strong",[t._v("1.2 代理驱动型")])]),t._v(" "),s("p",[t._v("服务器返回 300 Multiple Choices 或者 406 Not Acceptable，客户端从中选出最合适的那个资源。")]),t._v(" "),s("p",[s("strong",[t._v("Vary")])]),t._v(" "),s("div",{staticClass:"language-html line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[t._v("Vary: Accept-Language\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("在使用内容协商的情况下，只有当缓存服务器中的缓存满足内容协商条件时，才能使用该缓存，否则应该向源服务器请求该资源。")]),t._v(" "),s("p",[t._v("例如，一个客户端发送了一个包含 Accept-Language 首部字段的请求之后，源服务器返回的响应包含 "),s("code",[t._v("Vary: Accept-Language")]),t._v(" 内容，缓存服务器对这个响应进行缓存之后，在客户端下一次访问同一个 URL 资源，并且 Accept-Language 与缓存中的对应的值相同时才会返回该缓存。")]),t._v(" "),s("h2",{attrs:{id:"内容编码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#内容编码"}},[t._v("#")]),t._v(" 内容编码")]),t._v(" "),s("p",[t._v("浏览器发送 Accept-Encoding 首部，其中包含有它所支持的压缩算法，以及各自的优先级。服务器则从中选择一种，使用该算法对响应的消息主体进行压缩，并且发送 Content-Encoding 首部来告知浏览器它选择了哪一种算法。由于该内容协商过程是基于编码类型来选择资源的展现形式的，响应报文的 Vary 首部字段至少要包含 Content-Encoding。")]),t._v(" "),s("p",[t._v("常见编码：gzip、compress、deflate、identity")]),t._v(" "),s("h2",{attrs:{id:"范围请求"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#范围请求"}},[t._v("#")]),t._v(" 范围请求")]),t._v(" "),s("p",[t._v("如果网络出现中断，服务器只发送了一部分数据，范围请求可以使得客户端只请求服务器未发送的那部分数据，从而避免服务器重新发送所有数据。")]),t._v(" "),s("p",[s("strong",[t._v("1.Range")])]),t._v(" "),s("p",[t._v("在请求报文中添加 Range 首部字段指定请求的范围。")]),t._v(" "),s("div",{staticClass:"language-html line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[t._v("GET /z4d4kWk.jpg HTTP/1.1\nHost: i.imgur.com\nRange: bytes=0-1023\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[t._v("请求成功的话服务器返回的响应包含 206 Partial Content 状态码。")]),t._v(" "),s("div",{staticClass:"language-html line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[t._v("HTTP/1.1 206 Partial Content\nContent-Range: bytes 0-1023/146515\nContent-Length: 1024\n...\n(binary content)\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("p",[s("strong",[t._v("2.Accept-Ranges")])]),t._v(" "),s("p",[t._v("响应首部字段 Accept-Ranges 用于告知客户端是否能处理范围请求，可以处理使用 bytes，否则使用 none。")]),t._v(" "),s("div",{staticClass:"language-html line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[t._v("Accept-Ranges: bytes\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[s("strong",[t._v("3.响应状态码")])]),t._v(" "),s("ul",[s("li",[t._v("在请求成功的情况下，服务器会返回 206 Partial Content 状态码。")]),t._v(" "),s("li",[t._v("在请求的范围越界的情况下，服务器会返回 416 Requested Range Not Satisfiable 状态码。")]),t._v(" "),s("li",[t._v("在不支持范围请求的情况下，服务器会返回 200 OK 状态码。")])]),t._v(" "),s("h2",{attrs:{id:"分块传输编码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分块传输编码"}},[t._v("#")]),t._v(" 分块传输编码")]),t._v(" "),s("p",[t._v("Chunked Transfer Encoding，可以把数据分割成多块，让浏览器逐步显示页面。")]),t._v(" "),s("h2",{attrs:{id:"多部分对象集合"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#多部分对象集合"}},[t._v("#")]),t._v(" 多部分对象集合")]),t._v(" "),s("p",[t._v("一份报文主体内可含有多种类型的实体同时发送，每个部分之间用 boundary 字段定义的分隔符进行分隔，"),s("strong",[t._v("每个部分")]),t._v("都可以有首部字段。")]),t._v(" "),s("p",[t._v("例如，上传多个表单时可以使用如下方式")]),t._v(" "),s("div",{staticClass:"language-html line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[t._v('Content-Type: multipart/form-data; boundary=AaB03x\n\n--AaB03x\nContent-Disposition: form-data; name="submit-name"\n\nLarry\n--AaB03x\nContent-Disposition: form-data; name="files"; filename="file1.txt"\nContent-Type: text/plain\n\n... contents of file1.txt ...\n--AaB03x--\n')])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br")])]),s("p",[t._v("第一行是首部，表示是多部份对象，边界分隔符是“AaB03x”")]),t._v(" "),s("p",[t._v("第3行 表示一个部分对象的起始边界，第4行是其首部，名称为“submit-name”，内容是Larry")]),t._v(" "),s("p",[t._v("第7行 表示另一个部分对象的起始边界，第8行是其首部，表示名称为“files”，文件名为“file1.txt”，11行开始是文件内容")]),t._v(" "),s("p",[t._v("第12行表示多部份的结束，在分隔符之后加上“--”")]),t._v(" "),s("h2",{attrs:{id:"通信数据转发"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#通信数据转发"}},[t._v("#")]),t._v(" 通信数据转发")]),t._v(" "),s("p",[s("strong",[t._v("1.代理")])]),t._v(" "),s("p",[t._v("代理服务器接受客户端的请求，并且转发给其它服务器。")]),t._v(" "),s("p",[t._v("使用代理的主要目的是：")]),t._v(" "),s("ul",[s("li",[t._v("缓存")]),t._v(" "),s("li",[t._v("负载均衡")]),t._v(" "),s("li",[t._v("网络访问控制")]),t._v(" "),s("li",[t._v("访问日志记录")])]),t._v(" "),s("p",[t._v("代理服务器分为正向代理和反向代理两种")]),t._v(" "),s("ul",[s("li",[t._v("正向代理：客户端请求经过代理到达服务器，服务器不知道真正的客户端是谁")]),t._v(" "),s("li",[t._v("反向代理：服务器响应经过代理到达客户端，客户端不知道真正的服务器是谁")])]),t._v(" "),s("p",[s("strong",[t._v("2.网关")])]),t._v(" "),s("p",[t._v("与代理服务器不同的是，网关服务器会将 HTTP 转化为其它协议进行通信，从而请求其它非 HTTP 服务器的服务。")]),t._v(" "),s("p",[s("strong",[t._v("3.隧道")])]),t._v(" "),s("p",[t._v("使用 SSL 等加密手段，在客户端和服务器之间建立一条安全的通信线路。")]),t._v(" "),s("h2",{attrs:{id:"http1-1"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#http1-1"}},[t._v("#")]),t._v(" HTTP1.1")]),t._v(" "),s("h3",{attrs:{id:"q-http1-0与http1-1比较"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#q-http1-0与http1-1比较"}},[t._v("#")]),t._v(" Q：HTTP1.0与HTTP1.1比较？")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th"),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("HTTP1.0")]),t._v(" "),s("th",[t._v("HTTP1.1")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("连接长短")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("一次请求-响应，建立一个连接，用完关闭；每一个请求都要建立一个连接")]),t._v(" "),s("td",[t._v("默认"),s("strong",[t._v("长连接")]),t._v("，完成一次HTTP请求和响应后，可以接着复用该连接；但必须"),s("strong",[t._v("串行")]),t._v("（一个连接不能同时发送多个请求）。")])]),t._v(" "),s("tr",[s("td",[t._v("连接数")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("一个")]),t._v(" "),s("td",[t._v("支持同时打开"),s("strong",[t._v("多个 TCP 连接")]),t._v("。连接数没有具体限制，但浏览器会限制，如Chrome 最多允许对同一个 Host 建立 "),s("strong",[t._v("6个")]),t._v(" TCP 连接")])]),t._v(" "),s("tr",[s("td",[t._v("方法")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("定义三种方法：GET, POST 和 HEAD")]),t._v(" "),s("td",[t._v("增加了六种：OPTIONS, PUT, PATCH, DELETE, TRACE 和 CONNECT")])]),t._v(" "),s("tr",[s("td",[t._v("状态码")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}}),t._v(" "),s("td",[t._v("新增状态码 100（表示信息）")])]),t._v(" "),s("tr",[s("td",[t._v("新特性")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}}),t._v(" "),s("td",[t._v("支持"),s("strong",[t._v("分块传输")]),t._v("编码")])]),t._v(" "),s("tr",[s("td",[t._v("新特性")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}}),t._v(" "),s("td",[t._v("支持虚拟主机（一台服务器拥有多个域名，在逻辑上可以看成多个服务器）")])]),t._v(" "),s("tr",[s("td",[t._v("新特性")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}}),t._v(" "),s("td",[t._v("新增缓存处理指令 max-age")])]),t._v(" "),s("tr",[s("td",[t._v("新特性")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}}),t._v(" "),s("td",[t._v("连接支持流水线（"),s("code",[t._v("Pipelining")]),t._v("字段，又称管道机制）：连接内同时发出多个请求，不用一个个等待响应")])])])]),t._v(" "),s("h3",{attrs:{id:"q-短连接、长连接、管道机制和并行连接的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#q-短连接、长连接、管道机制和并行连接的区别"}},[t._v("#")]),t._v(" Q：短连接、长连接、管道机制和并行连接的区别？")]),t._v(" "),s("p",[s("img",{attrs:{src:"images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/2525618-20221225224821371-1302315289.png",alt:"img"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/image-20230201142524097.png",alt:"image-20230201142524097"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/2525618-20221225224836834-2024524297.png",alt:"img"}})]),t._v(" "),s("p",[s("strong",[t._v("管道机制")])]),t._v(" "),s("p",[t._v("连接内同时发出多个请求，不用一个个等待响应。")]),t._v(" "),s("p",[s("strong",[t._v("管道的缺点：队头堵塞")])]),t._v(" "),s("p",[t._v("虽然请求可以连续发出，但服务器必须按照接收请求的顺序依次发送对这些管道化请求的响应，以保证客户端能够区分出每次请求的响应内容。（原因大概是 HTTP/1.1 是个文本协议，只看返回报文无法确定是哪个请求的返回）")]),t._v(" "),s("p",[t._v("如果服务端在处理一个请求时耗时比较长，那么后续请求的处理都会被阻塞住，会导致客户端迟迟收不到数据")]),t._v(" "),s("p",[t._v("实际上，虽然管道机制的想法很好，但实现困难，因而很多浏览器不支持。一般为了提升性能，采用"),s("strong",[t._v("并行多个 TCP 连接")]),t._v("的形式来实现请求的同时发送。")]),t._v(" "),s("h2",{attrs:{id:"https"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#https"}},[t._v("#")]),t._v(" HTTPS")]),t._v(" "),s("p",[t._v("HTTP 有以下三个安全性问题：")]),t._v(" "),s("ol",[s("li",[t._v("使用明文进行通信，内容可能会被窃听；")]),t._v(" "),s("li",[t._v("不验证通信方的身份，通信方的身份有可能遭遇伪装；")]),t._v(" "),s("li",[t._v("无法证明报文的完整性，报文有可能遭篡改。")])]),t._v(" "),s("p",[t._v("HTTPS 并不是新协议，而是让 HTTP 先和 "),s("strong",[t._v("SSL")]),t._v("（Secure Sockets Layer）通信，再由 SSL 和 TCP 通信，即 HTTPS 使用隧道通信。")]),t._v(" "),s("p",[s("strong",[t._v("TLS")]),t._v("（Transport Layer Security）基于SSL3.0设计，以下SSL/TLS都指的是同一协议。")]),t._v(" "),s("p",[t._v("通过SSL，HTTPS 解决了上述三个安全性问题，具有了加密（防窃听）、认证（防伪装）和完整性保护（防篡改）。")]),t._v(" "),s("h3",{attrs:{id:"tls-四次握手"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tls-四次握手"}},[t._v("#")]),t._v(" TLS 四次握手")]),t._v(" "),s("p",[s("img",{attrs:{src:"images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/image-20230202010614422.png",alt:"image-20230202010614422"}})]),t._v(" "),s("ul",[s("li",[s("p",[t._v("前两次握手：加密算法协商。")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("Client Hello：浏览器向服务器发送一些可选的加密算法，以及【客户端随机数】。")])]),t._v(" "),s("li",[s("p",[t._v("Server Hello：服务器从这些加密算法中选出自己支持的算法告知浏览器，并发送一个包含其公钥的"),s("strong",[t._v("数字证书")]),t._v(" 和 【服务端随机数】。")]),t._v(" "),s("p",[t._v("浏览器用该证书的认证中心CA公开发布的公钥对该证书进行验证，验证通过后才进行下一步。")])])])]),t._v(" "),s("li",[s("p",[t._v("后两次握手：产生"),s("strong",[t._v("会话密钥")]),t._v("。使用"),s("strong",[t._v("非对称加密算法")]),t._v("计算，即浏览器选择一个随机数"),s("code",[t._v("pre_master_key")]),t._v("，用公钥加密后发送，服务器用私钥解密得到该"),s("code",[t._v("pre_master_key")]),t._v("。")]),t._v(" "),s("p",[t._v("此时双方都掌握三个随机数：【客户端随机数】、【服务端随机数】和"),s("code",[t._v("pre_master_key")]),t._v("，用这三个随机数计算得到会话密钥。")])])]),t._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:"images/计算机网络/640.png",alt:"图片"}}),t._v(" "),s("p",[t._v("之后就建立了用会话密钥"),s("strong",[t._v("对称加密")]),t._v("的安全传输连接")]),t._v(" "),s("h3",{attrs:{id:"加密"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#加密"}},[t._v("#")]),t._v(" 加密")]),t._v(" "),s("p",[s("strong",[t._v("1.对称密钥加密")]),t._v("（Symmetric-Key Encryption），加密和解密使用"),s("strong",[t._v("同一密钥")]),t._v("。")]),t._v(" "),s("ul",[s("li",[t._v("优点：运算速度快；")]),t._v(" "),s("li",[t._v("缺点：无法安全地将密钥传输给通信方。")]),t._v(" "),s("li",[t._v("常用算法：AES")])]),t._v(" "),s("p",[s("strong",[t._v("2.非对称密钥加密")]),t._v("，又称公开密钥加密（Public-Key Encryption），加密和解密使用"),s("strong",[t._v("不同的密钥")]),t._v("。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("加密【公加私解】：公开密钥所有人都可以获得，通信发送方获得接收方的公钥之后，用公钥加密，接收方收到通信内容后使用私有密钥解密。")])]),t._v(" "),s("li",[s("p",[t._v("签名【私加公解】：还可用来签名，过程与加密相反。因为私钥无法被其他人获取，因此发送方使用其私钥签名，接收方使用发送方的公钥对签名解密，就能判断这个签名是否正确，即是否发送方发出的，其他人由于没有私钥不能伪造，此外发送方也无法抵赖。")])]),t._v(" "),s("li",[s("p",[t._v("优点：可以更安全地将公开密钥传输给通信发送方；")])]),t._v(" "),s("li",[s("p",[t._v("缺点：运算速度慢。")])]),t._v(" "),s("li",[s("p",[t._v("常用算法：RSA")])])]),t._v(" "),s("p",[s("strong",[t._v("3.HTTPS 采用的加密方式：混合加密（RSA+AES）")])]),t._v(" "),s("ul",[s("li",[t._v("先使用非对称密钥加密（如RSA），传输对称密钥加密方式（如AES）需要的 Secret Key，从而保证安全性;")]),t._v(" "),s("li",[t._v("获取到 Secret Key 后，再使用对称密钥加密方式进行通信，从而保证效率。")])]),t._v(" "),s("p",[t._v("实际中也可以不将密钥和数据分开加密，整体先RSA再AES，与接收端约定好即可。")]),t._v(" "),s("h3",{attrs:{id:"认证"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#认证"}},[t._v("#")]),t._v(" 认证")]),t._v(" "),s("p",[t._v("通过使用 "),s("strong",[t._v("证书")]),t._v(" 来对通信方进行认证。")]),t._v(" "),s("p",[t._v("数字证书认证机构（CA，Certificate Authority）是客户端与服务器双方都可信赖的第三方机构。")]),t._v(" "),s("p",[t._v("服务器的运营人员向 CA 提出公开密钥的申请，CA 在判明提出申请者的身份之后，会对已申请的公开密钥做数字签名，然后分配这个已签名的公开密钥，并将该公开密钥放入公开密钥证书后"),s("strong",[t._v("绑定")]),t._v("在一起。")]),t._v(" "),s("p",[t._v("进行 HTTPS 通信时，服务器会把 "),s("strong",[t._v("证书")]),t._v(" 发送给客户端。客户端取得其中的公开密钥之后，先使用数字签名进行验证，如果验证通过，就可以开始通信了。")]),t._v(" "),s("h3",{attrs:{id:"完整性保护"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#完整性保护"}},[t._v("#")]),t._v(" 完整性保护")]),t._v(" "),s("p",[t._v("SSL 提供报文摘要功能来进行完整性保护。")]),t._v(" "),s("p",[t._v("HTTP 也提供了 MD5 报文摘要功能，但不是安全的。例如报文内容被篡改之后，同时重新计算 MD5 的值，通信接收方是无法意识到发生了篡改。")]),t._v(" "),s("p",[t._v("HTTPS 的报文摘要功能之所以安全，是因为它结合了加密和认证这两个操作。试想一下，加密之后的报文，遭到篡改之后，也很难重新计算报文摘要，因为无法轻易获取明文。")]),t._v(" "),s("h3",{attrs:{id:""}},[s("a",{staticClass:"header-anchor",attrs:{href:"#"}},[t._v("#")])]),t._v(" "),s("h3",{attrs:{id:"https-的缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#https-的缺点"}},[t._v("#")]),t._v(" HTTPS 的缺点")]),t._v(" "),s("ul",[s("li",[t._v("因为需要加密解密等过程，因此速度会更慢；")]),t._v(" "),s("li",[t._v("需要支付证书授权的高额费用。")])]),t._v(" "),s("h2",{attrs:{id:"http2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#http2"}},[t._v("#")]),t._v(" HTTP2")]),t._v(" "),s("p",[t._v("HTTP/1.x 实现简单是以牺牲性能为代价的：")]),t._v(" "),s("ul",[s("li",[t._v("客户端需要使用多个连接才能实现并发和缩短延迟；")]),t._v(" "),s("li",[t._v("报文为纯文本格式，体积大")]),t._v(" "),s("li",[t._v("不会压缩请求和响应首部，从而导致不必要的网络流量；")]),t._v(" "),s("li",[t._v("不支持有效的资源优先级，致使底层 TCP 连接的利用率低下。")])]),t._v(" "),s("p",[t._v("Http2改进：")]),t._v(" "),s("p",[t._v("多路复用、二进制传输、压缩首部、服务端推送")]),t._v(" "),s("h3",{attrs:{id:"二进制帧"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二进制帧"}},[t._v("#")]),t._v(" 二进制帧")]),t._v(" "),s("p",[t._v("HTTP1的报头是基于ASCII文本的，无法直接表示二进制（除非用base64转换）")]),t._v(" "),s("p",[t._v("HTTP/2.0 将报文分成 HEADERS 帧和 DATA 帧，它们都是二进制格式的。")]),t._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:"images/计算机网络/86e6a91d-a285-447a-9345-c5484b8d0c47.png",alt:"img"}}),t._v(" "),s("p",[t._v("在通信过程中，只会有一个 TCP 连接存在，它承载了任意数量的双向数据流（Stream）。")]),t._v(" "),s("ul",[s("li",[t._v("流（Stream）是二进制帧的双向传输序列，对于一个完整的请求-响应过程。")]),t._v(" "),s("li",[t._v("消息（Message）是"),s("strong",[t._v("逻辑上完整")]),t._v("的一系列帧。")]),t._v(" "),s("li",[t._v("帧（Frame）是"),s("strong",[t._v("最小")]),t._v("的通信单位，来自不同数据流的帧可以交错发送，然后再根据每个"),s("strong",[t._v("帧头")]),t._v("的数据流标识符重新组装。")])]),t._v(" "),s("img",{staticStyle:{zoom:"67%"},attrs:{src:"images/计算机网络/af198da1-2480-4043-b07f-a3b91a88b815.png",alt:"img"}}),t._v(" "),s("h3",{attrs:{id:"多路复用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#多路复用"}},[t._v("#")]),t._v(" 多路复用")]),t._v(" "),s("p",[t._v("HTTP2可以在一个TCP连接中并行发送多个流（即并行多个请求或响应），以复用这个TCP连接")]),t._v(" "),s("p",[t._v("通过流的Stream ID区分不同的请求-响应，解决了HTTP1.1 的队头阻塞问题。")]),t._v(" "),s("h3",{attrs:{id:"服务端推送"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#服务端推送"}},[t._v("#")]),t._v(" 服务端推送")]),t._v(" "),s("p",[t._v("HTTP/1.1 中，只能客户端发起请求，服务器对请求进行响应。")]),t._v(" "),s("p",[t._v("HTTP/2 中，服务端可以"),s("strong",[t._v("主动")]),t._v("给客户端推送必要的资源")]),t._v(" "),s("p",[t._v("例如客户端请求一个资源时，会把相关的资源一起发送给客户端，客户端就不需要再次发起请求了。例如客户端请求 page.html 页面，服务端就把 script.js 和 style.css 等与之相关的资源一起发给客户端。")]),t._v(" "),s("img",{staticStyle:{zoom:"75%"},attrs:{src:"images/计算机网络/e3f1657c-80fc-4dfa-9643-bf51abd201c6.png",alt:"img"}}),t._v(" "),s("h3",{attrs:{id:"首部压缩"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#首部压缩"}},[t._v("#")]),t._v(" 首部压缩")]),t._v(" "),s("p",[t._v("HTTP/1.1 的首部带有大量信息，而且每次都要重复发送。")]),t._v(" "),s("p",[t._v("HTTP/2.0 改进：")]),t._v(" "),s("ol",[s("li",[t._v("要求客户端和服务器同时维护和更新一个包含之前见过的"),s("strong",[t._v("首部字段表")]),t._v("，从而避免了重复传输。")]),t._v(" "),s("li",[t._v("此外HTTP/2.0 也使用 "),s("strong",[t._v("Huffman 编码")]),t._v("对首部字段进行压缩。")])]),t._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:"images/计算机网络/_u4E0B_u8F7D.png",alt:"img"}}),t._v(" "),s("h2",{attrs:{id:"http3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#http3"}},[t._v("#")]),t._v(" HTTP3")]),t._v(" "),s("p",[s("img",{attrs:{src:"images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/2525618-20221225224912330-853622009.png",alt:"img"}})]),t._v(" "),s("h3",{attrs:{id:"无队头阻塞"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#无队头阻塞"}},[t._v("#")]),t._v(" 无队头阻塞")]),t._v(" "),s("p",[t._v("HTTP/2 仍然采用 TCP 连接，因此并没有解决 TCP 的【队头阻塞】问题，只要出现丢包，则TCP就要重传，可能导致连接上的所有流阻塞，直到丢的包重传成功。")]),t._v(" "),s("p",[t._v("HTTP3 基于"),s("strong",[t._v("QUIC协议")]),t._v("，底层是UDP。丢包不会阻塞其他流，彻底解决了【队头阻塞】问题。将原先 TCP 协议提供的部分功能上移至 QUIC，在应用层保证可靠性。")]),t._v(" "),s("h3",{attrs:{id:"优化重传机制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#优化重传机制"}},[t._v("#")]),t._v(" 优化重传机制")]),t._v(" "),s("p",[t._v("TCP 采用"),s("strong",[t._v("序号+确认号+超时重传")]),t._v("机制来保证消息的可靠性，由于网络拥堵情况不断变化，因而消息的超时时间并不是固定的，而是通过不断采样消息的【往返时间】不断调整的，但 "),s("strong",[t._v("TCP 超时采样存在不准确的问题")]),t._v("。")]),t._v(" "),s("p",[t._v("例如客户端发送一个序号为 N 的包，然后超时了。于是重新发送一个序号为 N 的包，之后服务器收到后返回一个确认号 ACK 为 N+1 的包。但此时客户端并无法判断这个确定包是对【原始报文】的确认还是【重传报文】的确认，如下图，情况1会将采样时间算长，情况2会将采样时间算短")]),t._v(" "),s("p",[s("img",{attrs:{src:"images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/2525618-20221225224921040-1399680491.png",alt:"img"}})]),t._v(" "),s("p",[t._v("问题：原始报文和重传报文序列号都为N，如何确定ACK N+1是回应哪个报文？")]),t._v(" "),s("p",[t._v("QUIC 定义了一个"),s("strong",[t._v("递增")]),t._v("的序列号（不再叫 Seq，而是 Packet Number），每个序列号的包只发送一次，"),s("strong",[t._v("即使重传相同的包，其序列号也不一样")]),t._v("。")]),t._v(" "),s("p",[s("img",{attrs:{src:"images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/2525618-20221225224927917-822131467.png",alt:"img"}})]),t._v(" "),s("p",[t._v("如何知道包 N 和包 N+1 是同一个包呢？QUIC 定义了一个 **Offset **概念。发送的数据有个偏移量 Offset，可以通过 Offset 知道数据目前发送到了哪里，因而如果某个 Offset 的包没有收到确认，就重发。")]),t._v(" "),s("h3",{attrs:{id:"连接迁移"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#连接迁移"}},[t._v("#")]),t._v(" 连接迁移")]),t._v(" "),s("p",[t._v("一条 TCP 连接是由四元组标识的，分别是"),s("strong",[t._v("源 IP、源端口、目的 IP、目的端口")]),t._v("。一旦其中一个元素发生了变化，就需要断开重连。")]),t._v(" "),s("p",[t._v("QUIC 不再采用四元组，而是以一个 "),s("strong",[t._v("64 位的随机数 ID")]),t._v(" 来标识连接，通过此连接 ID 标记通信的两端，之后即使网络发生变化，IP 或端口变了，但只要 ID 不变，则无需重连，只需要复用原先连接即可。时延低，减少了用户的卡顿感，实现连接迁移。")]),t._v(" "),s("h2",{attrs:{id:"总结http的升级"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结http的升级"}},[t._v("#")]),t._v(" 总结HTTP的升级")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("版本")]),t._v(" "),s("th",[t._v("升级")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("HTTP/1.0")]),t._v(" "),s("td",[t._v("GET、POST、HEAD方法，基于TCP")])]),t._v(" "),s("tr",[s("td",[t._v("HTTP/1.1")]),t._v(" "),s("td",[t._v("增加了六种：OPTIONS, PUT, PATCH, DELETE, TRACE 和 CONNECT；引入长连接、管道（流水线）、分块传输；支持多个连接；新增100状态码；")])]),t._v(" "),s("tr",[s("td",[t._v("HTTP/2")]),t._v(" "),s("td",[t._v("多路复用、二进制传输、首部压缩、服务器推送")])]),t._v(" "),s("tr",[s("td",[t._v("HTTP/3")]),t._v(" "),s("td",[t._v("基于UDP")])])])]),t._v(" "),s("h2",{attrs:{id:"q-get和post区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#q-get和post区别"}},[t._v("#")]),t._v(" Q：GET和POST区别？")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("GET")]),t._v(" "),s("th",[t._v("POST")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("get 提交的数据放在 URL 中（http包头），可能会存在安全问题。")]),t._v(" "),s("td",[t._v("post 参数放在请求主体（http正文）中")])]),t._v(" "),s("tr",[s("td",[t._v("get请求参数会被缓存，会留在浏览器历史记录")]),t._v(" "),s("td",[t._v("post请求不会被缓存，也不会保留历史记录")])]),t._v(" "),s("tr",[s("td",[t._v("get 只支持 URL 编码（百分比编码，只能用ASCII字符）")]),t._v(" "),s("td",[t._v("post 支持多种编码")])]),t._v(" "),s("tr",[s("td",[t._v("get 提交的数据大小有限制（是浏览器的限制，与http无关）")]),t._v(" "),s("td",[t._v("post 提交的数据大小没限制")])]),t._v(" "),s("tr",[s("td",[t._v("get产生一个TCP数据包")]),t._v(" "),s("td",[t._v("post产生两个（视浏览器而定）")])])])]),t._v(" "),s("h3",{attrs:{id:"幂等性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#幂等性"}},[t._v("#")]),t._v(" 幂等性")]),t._v(" "),s("p",[t._v("幂等的 HTTP 方法，同样的请求被执行一次与连续执行多次的效果是一样的，服务器的状态也是一样的。即，幂等方法不应该具有副作用（统计用途除外），是安全的。")]),t._v(" "),s("p",[t._v("在正确实现的条件下，GET，HEAD，PUT 和 DELETE等方法都是幂等的，而 "),s("strong",[t._v("POST 方法不是")]),t._v("。")]),t._v(" "),s("p",[t._v("例如，DELETE删多次，最终结果都是删除一个URL资源而已：")]),t._v(" "),s("div",{staticClass:"language-text line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("DELETE /idX/delete HTTP/1.1   -> Returns 200 if idX exists\nDELETE /idX/delete HTTP/1.1   -> Returns 404 as it just got deleted\nDELETE /idX/delete HTTP/1.1   -> Returns 404\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("h3",{attrs:{id:"可缓存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#可缓存"}},[t._v("#")]),t._v(" 可缓存")]),t._v(" "),s("p",[t._v("如果要对响应进行缓存，需要满足以下条件：")]),t._v(" "),s("ul",[s("li",[t._v("请求报文的 HTTP 方法本身是可缓存的，包括 GET 和 HEAD，但是 PUT 和 DELETE 不可缓存，POST 在多数情况下不可缓存的。")]),t._v(" "),s("li",[t._v("响应报文的状态码是可缓存的，包括：200, 203, 204, 206, 300, 301, 404, 405, 410, 414, and 501。")]),t._v(" "),s("li",[t._v("响应报文的 Cache-Control 首部字段没有指定不进行缓存。")])]),t._v(" "),s("h3",{attrs:{id:"xmlhttprequest"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#xmlhttprequest"}},[t._v("#")]),t._v(" XMLHttpRequest")]),t._v(" "),s("p",[t._v("为了阐述 POST 和 GET 的另一个区别，需要先了解 XMLHttpRequest：")]),t._v(" "),s("blockquote",[s("p",[t._v("XMLHttpRequest 是一个 API，它为客户端提供了在客户端和服务器之间传输数据的功能。它提供了一个通过 URL 来获取数据的简单方式，并且不会使整个页面刷新。这使得网页只更新一部分页面而不会打扰到用户。XMLHttpRequest 在 AJAX 中被大量使用。")])]),t._v(" "),s("ul",[s("li",[t._v("在使用 XMLHttpRequest 的 POST 方法时，浏览器会先发送 Header 再发送 Data。但并不是所有浏览器会这么做，例如火狐就不会。")]),t._v(" "),s("li",[t._v("而 GET 方法 Header 和 Data 会一起发送。")])]),t._v(" "),s("h1",{attrs:{id:"wireshark抓包"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#wireshark抓包"}},[t._v("#")]),t._v(" wireshark抓包")]),t._v(" "),s("p",[t._v("SYN表示建立连接")]),t._v(" "),s("p",[t._v("FIN表示关闭连接")]),t._v(" "),s("p",[t._v("ACK表示响应")]),t._v(" "),s("p",[t._v("PSH表示有 data 数据传输")]),t._v(" "),s("p",[t._v("RST表示连接重置")]),t._v(" "),s("p",[s("img",{attrs:{src:"images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/image-20230103102225757.png",alt:"image-20230103102225757"}})]),t._v(" "),s("p",[t._v("如图表示一个已经建立的TCP连接，红框第一行表示A向B发送一个空包（LEN=0），表示确认（ACK）收到B的第2630字节以前的内容")]),t._v(" "),s("p",[t._v("第二行表示A向B传输数据（PSH），长度1460，因此发送第4402~5861（4402+1460-1，因为包括4402）个字节。")]),t._v(" "),s("p",[t._v("第三行表示B向A发送一个空确认包，ACK=5862 （A发送的最后一个字节号5861+1）")]),t._v(" "),s("p",[t._v("由上可知实际使用符合TCP传输规定")]),t._v(" "),s("h2",{attrs:{id:"tls-解密"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tls-解密"}},[t._v("#")]),t._v(" TLS 解密")]),t._v(" "),s("h3",{attrs:{id:"-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#-2"}},[t._v("#")])]),t._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:"images/计算机网络/640-1675306555603-15.png",alt:"图片"}}),t._v(" "),s("p",[t._v("HTTP协议里的Host和实际发送的request body都会被加密。所以没办法通过"),s("code",[t._v("http.host")]),t._v("进行过滤。")]),t._v(" "),s("p",[t._v("HTTPS握手中的Client Hello阶段，里面有个扩展"),s("code",[t._v("server_name")]),t._v("，会记录你想访问的是哪个网站，通过下面的筛选条件可以将它过滤出来。")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('  tls.handshake.extensions_server_name == "baidu.com"\n')])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("img",{staticStyle:{zoom:"67%"},attrs:{src:"images/计算机网络/640-1675306567420-18.png",alt:"图片"}}),t._v(" "),s("p",[t._v("执行tcpdump抓包")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ tcpdump -i eth0 host 39.156.66.10 -w baidu.pcap\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("然后在另外一个命令行窗口下执行下面的命令，"),s("strong",[t._v("目的是将加密的key导出，并给出对应的导出地址")]),t._v("是"),s("code",[t._v("/Users/xiaobaidebug/ssl.key")]),t._v("。")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ export SSLKEYLOGFILE=/Users/xiaobaidebug/ssl.key\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("然后在同一个命令行窗口下，继续执行curl命令或用命令行打开chrome浏览器。"),s("strong",[t._v("目的是为了让curl或chrome继承这个环境变量。")])]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ curl 'https://baidu.com'\n或者\n$ open -a Google\\ Chrome #在mac里打开chrome浏览器\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[t._v("此时会看到在"),s("code",[t._v("/Users/xiaobaidebug/")]),t._v("下会多了一个"),s("code",[t._v("ssl.key")]),t._v("文件。")]),t._v(" "),s("p",[t._v("这时候跟着下面的操作修改"),s("code",[t._v("wireshark")]),t._v("的配置项。")]),t._v(" "),s("p",[t._v("再修改"),s("code",[t._v("wireshark")]),t._v("的配置项，将"),s("code",[t._v("ssl.key")]),t._v("文件路径填入。")]),t._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:"images/计算机网络/640-1675307511214-21.png",alt:"图片"}}),t._v(" "),s("p",[t._v("点击确定后，就能看到"),s("strong",[t._v("18号和20号数据包已经被解密")])]),t._v(" "),s("img",{staticStyle:{zoom:"67%"},attrs:{src:"images/计算机网络/640-1675307553927-24.png",alt:"图片"}}),t._v(" "),s("p",[t._v("此时再用"),s("code",[t._v('http.host == "baidu.com"')]),t._v("，就能过滤出数据了。")]),t._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:"images/计算机网络/640-1675307576785-27.png",alt:"图片"}}),t._v(" "),s("p",[t._v("参考：https://mp.weixin.qq.com/s/h1SgPEkOlg8QZomJy1pt_A")]),t._v(" "),s("h1",{attrs:{id:"socket"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#socket"}},[t._v("#")]),t._v(" Socket")]),t._v(" "),s("p",[t._v("Socket（套接字）是一个抽象概念，一个应用程序通过一个Socket来建立一个远程连接，而Socket内部通过TCP/IP协议传输数据。一个Socket就是由 "),s("strong",[t._v("IP地址+端口号")]),t._v("（范围是0～65535）组成")]),t._v(" "),s("p",[t._v("使用Socket进行网络编程时，本质上就是两个进程之间的网络通信。其中一个进程必须充当服务器端，它会主动监听某个指定的端口，另一个进程必须充当客户端，它必须主动连接服务器的IP地址和指定端口，如果连接成功，服务器端和客户端就成功地建立了一个TCP连接，双方后续就可以随时发送和接收数据。")]),t._v(" "),s("h2",{attrs:{id:"q-socket和http的区别和应用场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#q-socket和http的区别和应用场景"}},[t._v("#")]),t._v(" Q：Socket和http的区别和应用场景")]),t._v(" "),s("p",[t._v("Socket连接就是所谓的长连接，理论上客户端和服务器端一旦建立起连接将不会主动断掉；Socket适用场景：网络游戏，银行持续交互，直播，在线视屏等。\nhttp连接就是所谓的短连接，即客户端向服务器端发送一次请求，服务器端响应后连接即会断开等待下次连接。http适用场景：公司OA服务，互联网服务，电商，办公，网站等等等等")]),t._v(" "),s("h2",{attrs:{id:"编写http-server-1-0"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#编写http-server-1-0"}},[t._v("#")]),t._v(" 编写HTTP Server（1.0)")]),t._v(" "),s("p",[t._v("一个HTTP Server本质上是一个TCP服务器，先用"),s("a",{attrs:{href:"https://www.liaoxuefeng.com/wiki/1252599548343744/1305207629676577",target:"_blank",rel:"noopener noreferrer"}},[t._v("TCP编程"),s("OutboundLink")],1),t._v("的多线程实现的服务器端框架。")]),t._v(" "),s("p",[t._v("只需要在"),s("code",[t._v("handle()")]),t._v("方法中，用Reader读取HTTP请求，用Writer发送HTTP响应，即可实现一个最简单的HTTP服务器。")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Server")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IOException")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ServerSocket")]),t._v(" ss "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ServerSocket")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8080")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 监听指定端口")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"server is running..."')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Socket")]),t._v(" sock "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ss"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("accept")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"connected from "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" sock"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getRemoteSocketAddress")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),t._v(" t "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Handler")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sock"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 传入Socket创建线程")]),t._v("\n            t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("start")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Handler")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Socket")]),t._v(" sock"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Handler")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Socket")]),t._v(" sock"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sock "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" sock"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("run")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InputStream")]),t._v(" input "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sock"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getInputStream")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("OutputStream")]),t._v(" output "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sock"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getOutputStream")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("handle")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("input"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" output"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sock"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("close")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IOException")]),t._v(" ioe"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"client disconnected."')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 核心逻辑：处理http请求和发送响应")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("handle")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InputStream")]),t._v(" input"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("OutputStream")]),t._v(" output"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IOException")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    \t"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Process new http request..."')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" reader "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BufferedReader")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InputStreamReader")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("input"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StandardCharsets")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("UTF_8")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" writer "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BufferedWriter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("OutputStreamWriter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("output"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StandardCharsets")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("UTF_8")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 读取HTTP请求:")]),t._v("\n    \t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" requestOk "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \t"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" first "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" reader"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("readLine")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("first"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("startsWith")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"GET / HTTP/1."')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不是以这个开头的，认为请求非法")]),t._v("\n        \trequestOk "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   \t \t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    \t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        \t"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" header "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" reader"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("readLine")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        \t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("header"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isEmpty")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 读取到空行时, HTTP Header读取完毕")]),t._v("\n            \t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        \t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        \t"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("header"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    \t"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("requestOk "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Response OK"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Response Error"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("requestOk"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        \t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 发送错误响应:")]),t._v("\n        \twriter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"HTTP/1.0 404 Not Found\\r\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        \twriter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Content-Length: 0\\r\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        \twriter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\r\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        \twriter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("flush")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        \t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 发送成功响应:")]),t._v("\n        \t"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" data "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<html><body><h1>Hello, world!</h1></body></html>"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        \t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" length "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getBytes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StandardCharsets")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("UTF_8")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 首先发送响应代码，表示一个成功的200响应，使用HTTP/1.0协议")]),t._v("\n        \twriter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"HTTP/1.0 200 OK\\r\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Header")]),t._v("\n        \twriter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Connection: close\\r\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        \twriter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Content-Type: text/html\\r\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        \twriter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Content-Length: "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" length "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\r\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n             "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 空行标识Header和Body的分隔")]),t._v("\n        \twriter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\r\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Body")]),t._v("\n        \twriter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        \twriter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("flush")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br"),s("span",{staticClass:"line-number"},[t._v("25")]),s("br"),s("span",{staticClass:"line-number"},[t._v("26")]),s("br"),s("span",{staticClass:"line-number"},[t._v("27")]),s("br"),s("span",{staticClass:"line-number"},[t._v("28")]),s("br"),s("span",{staticClass:"line-number"},[t._v("29")]),s("br"),s("span",{staticClass:"line-number"},[t._v("30")]),s("br"),s("span",{staticClass:"line-number"},[t._v("31")]),s("br"),s("span",{staticClass:"line-number"},[t._v("32")]),s("br"),s("span",{staticClass:"line-number"},[t._v("33")]),s("br"),s("span",{staticClass:"line-number"},[t._v("34")]),s("br"),s("span",{staticClass:"line-number"},[t._v("35")]),s("br"),s("span",{staticClass:"line-number"},[t._v("36")]),s("br"),s("span",{staticClass:"line-number"},[t._v("37")]),s("br"),s("span",{staticClass:"line-number"},[t._v("38")]),s("br"),s("span",{staticClass:"line-number"},[t._v("39")]),s("br"),s("span",{staticClass:"line-number"},[t._v("40")]),s("br"),s("span",{staticClass:"line-number"},[t._v("41")]),s("br"),s("span",{staticClass:"line-number"},[t._v("42")]),s("br"),s("span",{staticClass:"line-number"},[t._v("43")]),s("br"),s("span",{staticClass:"line-number"},[t._v("44")]),s("br"),s("span",{staticClass:"line-number"},[t._v("45")]),s("br"),s("span",{staticClass:"line-number"},[t._v("46")]),s("br"),s("span",{staticClass:"line-number"},[t._v("47")]),s("br"),s("span",{staticClass:"line-number"},[t._v("48")]),s("br"),s("span",{staticClass:"line-number"},[t._v("49")]),s("br"),s("span",{staticClass:"line-number"},[t._v("50")]),s("br"),s("span",{staticClass:"line-number"},[t._v("51")]),s("br"),s("span",{staticClass:"line-number"},[t._v("52")]),s("br"),s("span",{staticClass:"line-number"},[t._v("53")]),s("br"),s("span",{staticClass:"line-number"},[t._v("54")]),s("br"),s("span",{staticClass:"line-number"},[t._v("55")]),s("br"),s("span",{staticClass:"line-number"},[t._v("56")]),s("br"),s("span",{staticClass:"line-number"},[t._v("57")]),s("br"),s("span",{staticClass:"line-number"},[t._v("58")]),s("br"),s("span",{staticClass:"line-number"},[t._v("59")]),s("br"),s("span",{staticClass:"line-number"},[t._v("60")]),s("br"),s("span",{staticClass:"line-number"},[t._v("61")]),s("br"),s("span",{staticClass:"line-number"},[t._v("62")]),s("br"),s("span",{staticClass:"line-number"},[t._v("63")]),s("br"),s("span",{staticClass:"line-number"},[t._v("64")]),s("br"),s("span",{staticClass:"line-number"},[t._v("65")]),s("br"),s("span",{staticClass:"line-number"},[t._v("66")]),s("br"),s("span",{staticClass:"line-number"},[t._v("67")]),s("br"),s("span",{staticClass:"line-number"},[t._v("68")]),s("br"),s("span",{staticClass:"line-number"},[t._v("69")]),s("br"),s("span",{staticClass:"line-number"},[t._v("70")]),s("br"),s("span",{staticClass:"line-number"},[t._v("71")]),s("br"),s("span",{staticClass:"line-number"},[t._v("72")]),s("br"),s("span",{staticClass:"line-number"},[t._v("73")]),s("br"),s("span",{staticClass:"line-number"},[t._v("74")]),s("br"),s("span",{staticClass:"line-number"},[t._v("75")]),s("br"),s("span",{staticClass:"line-number"},[t._v("76")]),s("br")])]),s("h1",{attrs:{id:"websocket"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#websocket"}},[t._v("#")]),t._v(" Websocket")]),t._v(" "),s("p",[t._v("现在使用最广泛的"),s("code",[t._v("HTTP1.1")]),t._v("，也是基于TCP协议的，"),s("strong",[t._v("同一时间里")]),t._v("，客户端和服务器"),s("strong",[t._v("只能有一方主动")]),t._v("发数据，这就是所谓的"),s("strong",[t._v("半双工")]),t._v("。也就是说，好好的全双工TCP，被HTTP用成了半双工。这是由于HTTP协议设计之初，考虑的是看看网页文本的场景，能做到"),s("strong",[t._v("客户端发起请求再由服务器响应")]),t._v("，就够了，根本就没考虑网页游戏这种，客户端和服务器之间都要互相主动发大量数据的场景。")]),t._v(" "),s("p",[t._v("所以为了更好的支持这样的场景，我们需要另外一个"),s("strong",[t._v("基于TCP的新协议")]),t._v("。于是新的应用层协议"),s("strong",[t._v("websocket")]),t._v("就被设计出来了。")]),t._v(" "),s("blockquote",[s("p",[t._v("虽然名字带了个socket，但其实socket和websocket之间，就跟雷峰和雷峰塔一样，二者接近"),s("strong",[t._v("毫无关系")]),t._v("。")])]),t._v(" "),s("h2",{attrs:{id:"建立websocket连接"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#建立websocket连接"}},[t._v("#")]),t._v(" 建立websocket连接")]),t._v(" "),s("img",{staticStyle:{zoom:"25%"},attrs:{src:"images/计算机网络/90cf4e27558d4373b8f9ef678b696eb9tplv-k3u1fbpfcp-zoom-in-crop-mark4536000.webp",alt:"建立websocket连接.drawio"}}),t._v(" "),s("p",[t._v("浏览器在"),s("strong",[t._v("TCP三次握手")]),t._v("建立连接之后，都"),s("strong",[t._v("统一使用HTTP协议")]),t._v("先进行一次通信。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("如果此时是"),s("strong",[t._v("普通的HTTP请求")]),t._v("，那后续双方就还是老样子继续用普通HTTP协议进行交互，这点没啥疑问。")])]),t._v(" "),s("li",[s("p",[t._v("如果这时候是"),s("strong",[t._v("想建立websocket连接")]),t._v("，就会在HTTP请求里带上一些"),s("strong",[t._v("特殊的header头")]),t._v("。")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("Connection: Upgrade\nUpgrade: websocket\nSec-WebSocket-Key: T2a6wZlAwhgQNqruZ2YUyg==\\r\\n\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])])])]),t._v(" "),s("p",[t._v("这些header头的意思是，浏览器想"),s("strong",[t._v("升级协议（Connection: Upgrade）")]),t._v("，并且想升级成"),s("strong",[t._v("websocket协议（Upgrade: websocket）")]),t._v("。")]),t._v(" "),s("p",[t._v("同时带上一段"),s("strong",[t._v("随机生成的base64码（Sec-WebSocket-Key）")]),t._v("，发给服务器。")]),t._v(" "),s("p",[t._v("如果服务器正好支持升级成websocket协议。就会走websocket握手流程，同时根据客户端生成的base64码，用某个"),s("strong",[t._v("公开的")]),t._v("算法变成另一段字符串，放在HTTP响应的 "),s("code",[t._v("Sec-WebSocket-Accept")]),t._v(" 头里，同时带上"),s("code",[t._v("101状态码")]),t._v("，发回给浏览器。")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("HTTP/1.1 101 Switching Protocols\\r\\n\nSec-WebSocket-Accept: iBJKv/ALIW2DobfoA4dmr3JHBCY=\\r\\n\nUpgrade: websocket\\r\\n\nConnection: Upgrade\\r\\n\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("blockquote",[s("p",[t._v("http状态码=200（正常响应）的情况，大家见得多了。101确实不常见，它其实是指"),s("strong",[t._v("协议切换")]),t._v("。")])]),t._v(" "),s("p",[t._v("之后，浏览器也用同样的"),s("strong",[t._v("公开算法")]),t._v("将"),s("code",[t._v("base64码")]),t._v("转成另一段字符串，如果这段字符串跟服务器传回来的"),s("strong",[t._v("字符串一致")]),t._v("，那验证通过。")]),t._v(" "),s("p",[t._v("就这样经历了一来一回两次HTTP握手，websocket就建立完成了，后续双方就可以使用webscoket的数据格式进行通信了。")]),t._v(" "),s("p",[t._v('你在网上可能会看到一种说法："websocket是基于HTTP的新协议"，'),s("strong",[t._v("其实这并不对")]),t._v("，因为websocket只有在建立连接时才用到了HTTP，"),s("strong",[t._v("升级完成之后就跟HTTP没有任何关系了")]),t._v("。")]),t._v(" "),s("h1",{attrs:{id:"应用层其他协议"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#应用层其他协议"}},[t._v("#")]),t._v(" 应用层其他协议")]),t._v(" "),s("h2",{attrs:{id:"常用端口"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常用端口"}},[t._v("#")]),t._v(" 常用端口")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("应用")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("应用层协议")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("端口号")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("传输层协议")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("备注")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("域名解析")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("DNS")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("53")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("UDP/TCP")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("两种情况使用 TCP：1. 长度超过 "),s("strong",[t._v("512")]),t._v(" 字节（因为UDP 建议最大只支持 512 ）2. 区域传送（主域名服务器向辅助域名服务器传送变化的那部分数据，数据量大）")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("动态主机配置协议")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("DHCP")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("67/68")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("UDP")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}})]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("简单网络管理协议")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("SNMP")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("161/162")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("UDP")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}})]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("文件传送协议")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("FTP")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("20/21")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("TCP")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("控制连接 21，数据连接 20")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("远程终端协议")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("TELNET")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("23")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("TCP")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}})]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("超文本传送协议")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("HTTP")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("80")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("TCP")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}})]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("简单邮件传送协议")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("SMTP")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("25")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("TCP")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}})]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("邮件读取协议")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("POP3")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("110")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("TCP")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}})]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("网际报文存取协议")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("IMAP")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("143")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("TCP")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}})])])]),t._v(" "),s("h2",{attrs:{id:"_1-域名系统dns"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-域名系统dns"}},[t._v("#")]),t._v(" 1. 域名系统DNS")]),t._v(" "),s("p",[t._v("是一个分布式数据库，提供了"),s("strong",[t._v("主机名")]),t._v("和 "),s("strong",[t._v("IP 地址")]),t._v("之间相互转换的服务。")]),t._v(" "),s("p",[s("strong",[t._v("分布式数据库")]),t._v("是指，每个站点只保留它自己的那部分数据。")]),t._v(" "),s("h3",{attrs:{id:"域名格式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#域名格式"}},[t._v("#")]),t._v(" 域名格式")]),t._v(" "),s("ol",[s("li",[t._v("共四级，从左到右分别是低级域名到高级域名；")]),t._v(" "),s("li",[t._v("每一级都由英文+数字构成，不超过63字符（加上分隔符"),s("code",[t._v(".")]),t._v("号，总共不超过63*4+3=255）；")])]),t._v(" "),s("p",[s("img",{attrs:{src:"images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/image-20230206003327376.png",alt:"image-20230206003327376"}})]),t._v(" "),s("h3",{attrs:{id:"域名结构-逻辑概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#域名结构-逻辑概念"}},[t._v("#")]),t._v(" 域名结构（逻辑概念）")]),t._v(" "),s("p",[t._v("层次树状结构：")]),t._v(" "),s("p",[s("img",{attrs:{src:"images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/image-20230206003544941.png",alt:"image-20230206003544941"}})]),t._v(" "),s("p",[t._v("树根：没有对应域名")]),t._v(" "),s("p",[t._v("顶级：国家（cn）、组织（com、org）等")]),t._v(" "),s("p",[t._v("二级：省、机构等")]),t._v(" "),s("h3",{attrs:{id:"域名服务器-物理存在"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#域名服务器-物理存在"}},[t._v("#")]),t._v(" 域名服务器（物理存在）")]),t._v(" "),s("p",[t._v("域名和ip对应关系实际上保存再域名服务器上")]),t._v(" "),s("ol",[s("li",[t._v("根域名服务器：最高层级，全球共13台。并不直接对域名解析，而是返回该域名"),s("strong",[t._v("所属顶级域名")]),t._v("所在的服务器的（即顶级服务器）ip")]),t._v(" "),s("li",[t._v("顶级域名服务器")]),t._v(" "),s("li",[t._v("权限域名服务器")]),t._v(" "),s("li",[t._v("本地域名服务器：不属于域名服务器的等级结构。主机最先请求本地服务器，本地服务器只做代理作用")])]),t._v(" "),s("p",[t._v("域名服务器使用"),s("strong",[t._v("高速缓存")]),t._v("减少网络中DNS报文数量")]),t._v(" "),s("h3",{attrs:{id:"域名解析过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#域名解析过程"}},[t._v("#")]),t._v(" 域名解析过程")]),t._v(" "),s("img",{staticStyle:{zoom:"33%"},attrs:{src:"images\\计算机网络\\1632307681-keCKRT-image.png",alt:"DNS.png"}}),t._v(" "),s("ol",[s("li",[t._v("递归查询：如果主机所询问的本地域名服务器不知道被查询域名的 IP 地址，那么本地域名服务器就以 DNS 客户端的身份，向其他根域名服务器继续发出查询请求报文，即"),s("strong",[t._v("把查询委托给其他服务器")]),t._v("，而不是让主机自己进行下一步查询。根服务器又将查询委托给服务器①，如此递归下去，直到查到主机B。如上图步骤（1）~（10）。")]),t._v(" "),s("li",[t._v("迭代查询：当根域名服务器收到本地域名服务器发出的迭代查询请求报文时，要么给出所要查询的 IP 地址，要么告诉本地服务器下一步应该找哪个域名服务器进行查询，然后"),s("strong",[t._v("还是让本地服务器进行后续的查询")]),t._v("，如上图步骤（2）~（9）。")])]),t._v(" "),s("p",[t._v("由于递归查询对被查询的服务器负担太大，通常采取以下方式：主机A到本地DNS用递归查询，其余用迭代查询。")]),t._v(" "),s("p",[t._v("DNS")]),t._v(" "),s("h3",{attrs:{id:"dns劫持"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dns劫持"}},[t._v("#")]),t._v(" DNS劫持")]),t._v(" "),s("p",[t._v("即域名劫持，是通过将原域名对应的 IP 地址进行替换从而使得用户访问到错误的网站，或者使用户无法正常访问网站的一种攻击方式。")]),t._v(" "),s("p",[t._v("攻击者冒充原域名所属机构，修改电子邮件来修改机构的域名注册信息，或将域名转让给其他组织，并将新域名保存在指定DNS服务器，使用户无法通过对原域名解析来访问目的网址。")]),t._v(" "),s("p",[t._v("域名劫持往往只能在特定的网络范围内进行，范围外DNS解析正常。")]),t._v(" "),s("p",[t._v("预防手段：")]),t._v(" "),s("p",[t._v("直接通过ip地址访问，避开DNS")]),t._v(" "),s("h2",{attrs:{id:"_2-文件传送协议ftp"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-文件传送协议ftp"}},[t._v("#")]),t._v(" 2. 文件传送协议FTP")]),t._v(" "),s("p",[t._v("FTP 使用 TCP 进行连接，它需要两个连接来传送一个文件：")]),t._v(" "),s("ul",[s("li",[t._v("控制连接：服务器打开端口号 21 等待客户端的连接，客户端主动建立连接后，使用这个连接将客户端的命令传送给服务器，并传回服务器的应答。")]),t._v(" "),s("li",[t._v("数据连接：用来传送一个文件的数据。")])]),t._v(" "),s("p",[t._v("根据数据连接"),s("strong",[t._v("是否由服务器端主动")]),t._v("建立，FTP 有主动和被动两种模式：")]),t._v(" "),s("ol",[s("li",[t._v("主动模式：服务器端主动建立数据连接，其中服务器端的端口号为 20，客户端的端口号随机，但是必须大于 1024，因为 0~1023 是熟知端口号。")]),t._v(" "),s("li",[t._v("被动模式：客户端主动建立数据连接，其中客户端的端口号由客户端自己指定，服务器端的端口号随机。")])]),t._v(" "),s("p",[t._v("主动模式要求客户端开放端口号给服务器端，需要去配置客户端的防火墙。")]),t._v(" "),s("p",[t._v("被动模式只需要服务器端开放端口号即可，无需客户端配置防火墙。但是安全性减弱。")]),t._v(" "),s("h2",{attrs:{id:"_3-动态主机配置协议"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-动态主机配置协议"}},[t._v("#")]),t._v(" 3. 动态主机配置协议")]),t._v(" "),s("p",[t._v("DHCP (Dynamic Host Configuration Protocol) 提供了即插即用的连网方式，用户不再需要手动配置 IP 地址等信息。")]),t._v(" "),s("p",[t._v("DHCP 配置的内容不仅是 IP 地址，还包括子网掩码、网关 IP 地址。")]),t._v(" "),s("p",[t._v("DHCP 工作过程如下：")]),t._v(" "),s("ol",[s("li",[t._v("客户端发送 Discover 报文，该报文的目的地址为 255.255.255.255:67，源地址为 0.0.0.0:68，被放入 UDP 中，该报文被广播到同一个子网的所有主机上。如果客户端和 DHCP 服务器不在同一个子网，就需要使用中继代理。")]),t._v(" "),s("li",[t._v("DHCP 服务器收到 Discover 报文之后，发送 Offer 报文给客户端，该报文包含了客户端所需要的信息。因为客户端可能收到多个 DHCP 服务器提供的信息，因此客户端需要进行选择。")]),t._v(" "),s("li",[t._v("如果客户端选择了某个 DHCP 服务器提供的信息，那么就发送 Request 报文给该 DHCP 服务器。")]),t._v(" "),s("li",[t._v("DHCP 服务器发送 Ack 报文，表示客户端此时可以使用提供给它的信息。")])]),t._v(" "),s("p",[s("img",{attrs:{src:"images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/23219e4c-9fc0-4051-b33a-2bd95bf054ab.jpg",alt:"img"}})]),t._v(" "),s("h2",{attrs:{id:"_4-电子邮件协议"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-电子邮件协议"}},[t._v("#")]),t._v(" 4. 电子邮件协议")]),t._v(" "),s("p",[t._v("一个电子邮件系统由三部分组成：用户代理、邮件服务器以及邮件协议。")]),t._v(" "),s("p",[t._v("邮件协议包含发送协议和读取协议，发送协议常用 SMTP，读取协议常用 POP3 和 IMAP。")]),t._v(" "),s("p",[s("img",{attrs:{src:"images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/7b3efa99-d306-4982-8cfb-e7153c33aab4.png",alt:"img"}})]),t._v(" "),s("h4",{attrs:{id:"smtp"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#smtp"}},[t._v("#")]),t._v(" SMTP")]),t._v(" "),s("p",[t._v("SMTP 只能发送 ASCII 码，而互联网邮件扩充 MIME 可以发送二进制文件。MIME 并没有改动或者取代 SMTP，而是增加邮件主体的结构，定义了非 ASCII 码的编码规则。")]),t._v(" "),s("p",[s("img",{attrs:{src:"images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/ed5522bb-3a60-481c-8654-43e7195a48fe.png",alt:"img"}})]),t._v(" "),s("h4",{attrs:{id:"pop3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pop3"}},[t._v("#")]),t._v(" POP3")]),t._v(" "),s("p",[t._v("POP3 的特点是只要用户从服务器上读取了邮件，就把该邮件删除。但最新版本的 POP3 可以不删除邮件。")]),t._v(" "),s("h4",{attrs:{id:"imap"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#imap"}},[t._v("#")]),t._v(" IMAP")]),t._v(" "),s("p",[t._v("IMAP 协议中客户端和服务器上的邮件保持同步，如果不手动删除邮件，那么服务器上的邮件也不会被删除。IMAP 这种做法可以让用户随时随地去访问服务器上的邮件。")]),t._v(" "),s("h2",{attrs:{id:"_5-远程登录协议"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-远程登录协议"}},[t._v("#")]),t._v(" 5. 远程登录协议")]),t._v(" "),s("p",[t._v("TELNET 用于登录到远程主机上，并且远程主机上的输出也会返回。")]),t._v(" "),s("p",[t._v("TELNET 可以适应许多计算机和操作系统的差异，例如不同操作系统系统的换行符定义。")]),t._v(" "),s("h2",{attrs:{id:"web-页面请求过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#web-页面请求过程"}},[t._v("#")]),t._v(" Web 页面请求过程")]),t._v(" "),s("h3",{attrs:{id:"_1-dhcp-配置主机信息"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-dhcp-配置主机信息"}},[t._v("#")]),t._v(" 1. DHCP 配置主机信息")]),t._v(" "),s("ul",[s("li",[t._v("假设主机最开始没有 IP 地址以及其它信息，那么就需要先使用 DHCP 来获取。")]),t._v(" "),s("li",[t._v("主机生成一个 DHCP 请求报文，并将这个报文放入具有目的端口 67 和源端口 68 的 UDP 报文段中。")]),t._v(" "),s("li",[t._v("该报文段则被放入在一个具有广播 IP 目的地址(255.255.255.255) 和源 IP 地址（0.0.0.0）的 IP 数据报中。")]),t._v(" "),s("li",[t._v("该数据报则被放置在 MAC 帧中，该帧具有目的地址 FF:"),s("zero-width",{attrs:{space:""}},[t._v("FF:"),s("zero-width",{attrs:{space:""}},[t._v("FF:"),s("zero-width",{attrs:{space:""}},[t._v("FF:"),s("zero-width",{attrs:{space:""}},[t._v("FF:FF，将广播到与交换机连接的所有设备。")])],1)],1)],1)],1),t._v(" "),s("li",[t._v("连接在交换机的 DHCP 服务器收到广播帧之后，不断地向上分解得到 IP 数据报、UDP 报文段、DHCP 请求报文，之后生成 DHCP ACK 报文，该报文包含以下信息：IP 地址、DNS 服务器的 IP 地址、默认网关路由器的 IP 地址和子网掩码。该报文被放入 UDP 报文段中，UDP 报文段有被放入 IP 数据报中，最后放入 MAC 帧中。")]),t._v(" "),s("li",[t._v("该帧的目的地址是请求主机的 MAC 地址，因为交换机具有自学习能力，之前主机发送了广播帧之后就记录了 MAC 地址到其转发接口的交换表项，因此现在交换机就可以直接知道应该向哪个接口发送该帧。")]),t._v(" "),s("li",[t._v("主机收到该帧后，不断分解得到 DHCP 报文。之后就配置它的 IP 地址、子网掩码和 DNS 服务器的 IP 地址，并在其 IP 转发表中安装默认网关。")])]),t._v(" "),s("h3",{attrs:{id:"_2-arp-解析-mac-地址"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-arp-解析-mac-地址"}},[t._v("#")]),t._v(" 2. ARP 解析 MAC 地址")]),t._v(" "),s("ul",[s("li",[t._v("主机通过浏览器生成一个 TCP 套接字，套接字向 HTTP 服务器发送 HTTP 请求。为了生成该套接字，主机需要知道网站的域名对应的 IP 地址。")]),t._v(" "),s("li",[t._v("主机生成一个 DNS 查询报文，该报文具有 53 号端口，因为 DNS 服务器的端口号是 53。")]),t._v(" "),s("li",[t._v("该 DNS 查询报文被放入目的地址为 DNS 服务器 IP 地址的 IP 数据报中。")]),t._v(" "),s("li",[t._v("该 IP 数据报被放入一个以太网帧中，该帧将发送到网关路由器。")]),t._v(" "),s("li",[t._v("DHCP 过程只知道网关路由器的 IP 地址，为了获取网关路由器的 MAC 地址，需要使用 ARP 协议。")]),t._v(" "),s("li",[t._v("主机生成一个包含目的地址为网关路由器 IP 地址的 ARP 查询报文，将该 ARP 查询报文放入一个具有广播目的地址（FF:"),s("zero-width",{attrs:{space:""}},[t._v("FF:"),s("zero-width",{attrs:{space:""}},[t._v("FF:"),s("zero-width",{attrs:{space:""}},[t._v("FF:"),s("zero-width",{attrs:{space:""}},[t._v("FF:FF）的以太网帧中，并向交换机发送该以太网帧，交换机将该帧转发给所有的连接设备，包括网关路由器。")])],1)],1)],1)],1),t._v(" "),s("li",[t._v("网关路由器接收到该帧后，不断向上分解得到 ARP 报文，发现其中的 IP 地址与其接口的 IP 地址匹配，因此就发送一个 ARP 回答报文，包含了它的 MAC 地址，发回给主机。")])]),t._v(" "),s("h3",{attrs:{id:"_3-dns-解析域名"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-dns-解析域名"}},[t._v("#")]),t._v(" 3. DNS 解析域名")]),t._v(" "),s("ul",[s("li",[t._v("知道了网关路由器的 MAC 地址之后，就可以继续 DNS 的解析过程了。")]),t._v(" "),s("li",[t._v("网关路由器接收到包含 DNS 查询报文的以太网帧后，抽取出 IP 数据报，并根据转发表决定该 IP 数据报应该转发的路由器。")]),t._v(" "),s("li",[t._v("因为路由器具有内部网关协议（RIP、OSPF）和外部网关协议（BGP）这两种路由选择协议，因此路由表中已经配置了网关路由器到达 DNS 服务器的路由表项。")]),t._v(" "),s("li",[t._v("到达 DNS 服务器之后，DNS 服务器抽取出 DNS 查询报文，并在 DNS 数据库中查找待解析的域名。")]),t._v(" "),s("li",[t._v("找到 DNS 记录之后，发送 DNS 回答报文，将该回答报文放入 UDP 报文段中，然后放入 IP 数据报中，通过路由器反向转发回网关路由器，并经过以太网交换机到达主机。")])]),t._v(" "),s("h3",{attrs:{id:"_4-http-请求页面"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-http-请求页面"}},[t._v("#")]),t._v(" 4. HTTP 请求页面")]),t._v(" "),s("ul",[s("li",[t._v("有了 HTTP 服务器的 IP 地址之后，主机就能够生成 TCP 套接字，该套接字将用于向 Web 服务器发送 HTTP GET 报文。")]),t._v(" "),s("li",[t._v("在生成 TCP 套接字之前，必须先与 HTTP 服务器进行三次握手来建立连接。生成一个具有目的端口 80 的 TCP SYN 报文段，并向 HTTP 服务器发送该报文段。")]),t._v(" "),s("li",[t._v("HTTP 服务器收到该报文段之后，生成 TCP SYN ACK 报文段，发回给主机。")]),t._v(" "),s("li",[t._v("连接建立之后，浏览器生成 HTTP GET 报文，并交付给 HTTP 服务器。")]),t._v(" "),s("li",[t._v("HTTP 服务器从 TCP 套接字读取 HTTP GET 报文，生成一个 HTTP 响应报文，将 Web 页面内容放入报文主体中，发回给主机。")]),t._v(" "),s("li",[t._v("浏览器收到 HTTP 响应报文后，抽取出 Web 页面内容，之后进行渲染，显示 Web 页面。")])]),t._v(" "),s("h1",{attrs:{id:"base64编码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#base64编码"}},[t._v("#")]),t._v(" Base64编码")]),t._v(" "),s("p",[t._v("目的是把二进制数据变成文本格式，这样在很多文本中就可以处理二进制数据（如电子邮件协议pop3、SMTP等）。一共用到"),s("code",[t._v("A~Z")]),t._v("、"),s("code",[t._v("a~z")]),t._v("、"),s("code",[t._v("+")]),t._v("和"),s("code",[t._v("/")]),t._v("，共64个ASCII字符")]),t._v(" "),s("p",[t._v("缺点：效率变低，因为长度增加1/3")]),t._v(" "),s("p",[t._v("编码举例：3个byte数据分别是"),s("code",[t._v("e4")]),t._v("、"),s("code",[t._v("b8")]),t._v("、"),s("code",[t._v("ad")]),t._v("，按"),s("strong",[t._v("6bit分组")]),t._v("得到"),s("code",[t._v("39")]),t._v("、"),s("code",[t._v("0b")]),t._v("、"),s("code",[t._v("22")]),t._v("和"),s("code",[t._v("2d")]),t._v("：")]),t._v(" "),s("div",{staticClass:"language-ascii line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("┌───────────────┬───────────────┬───────────────┐\n│      e4       │      b8       │      ad       │\n└───────────────┴───────────────┴───────────────┘\n┌─┬─┬─┬─┬─┬─┬─┬─┬─┬─┬─┬─┬─┬─┬─┬─┬─┬─┬─┬─┬─┬─┬─┬─┐\n│1│1│1│0│0│1│0│0│1│0│1│1│1│0│0│0│1│0│1│0│1│1│0│1│\n└─┴─┴─┴─┴─┴─┴─┴─┴─┴─┴─┴─┴─┴─┴─┴─┴─┴─┴─┴─┴─┴─┴─┴─┘\n┌───────────┬───────────┬───────────┬───────────┐\n│    39     │    0b     │    22     │    2d     │\n└───────────┴───────────┴───────────┴───────────┘\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br")])]),s("p",[t._v("因为6位整数的范围总是"),s("code",[t._v("0~63")]),t._v("，所以，能用"),s("strong",[t._v("64个字符")]),t._v("表示：字符"),s("code",[t._v("A~Z")]),t._v("对应索引"),s("code",[t._v("0~25")]),t._v("，字符"),s("code",[t._v("a~z")]),t._v("对应索引"),s("code",[t._v("26~51")]),t._v("，字符"),s("code",[t._v("0~9")]),t._v("对应索引"),s("code",[t._v("52~61")]),t._v("，最后两个索引"),s("code",[t._v("62")]),t._v("、"),s("code",[t._v("63")]),t._v("分别用字符"),s("code",[t._v("+")]),t._v("和"),s("code",[t._v("/")]),t._v("表示。")]),t._v(" "),s("p",[t._v("如果byte数组长度不是3的整数倍（因为要保证总bit数是6的整数倍），就在末尾补一个或两个"),s("code",[t._v("0x00")]),t._v("，转成字符是"),s("code",[t._v("=")]),t._v("。")]),t._v(" "),s("h2",{attrs:{id:"计算编码前大小"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#计算编码前大小"}},[t._v("#")]),t._v(" 计算编码前大小")]),t._v(" "),s("p",[t._v("要计算原byte数组长度，就先去掉末尾的"),s("code",[t._v("=")]),t._v("。")]),t._v(" "),s("p",[t._v("编码后字符数为A，则编码前Byte数=A*0.75，因为如上图所示，用4个字符表示3个Byte。")])])}),[],!1,null,null,null);s.default=n.exports}}]);